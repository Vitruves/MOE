<!DOCTYPE html>
<html>

<!--
!!    MOE On-Line Manuals
!!    COPYRIGHT (C) CHEMICAL COMPUTING GROUP ULC.  ALL RIGHTS RESERVED.
!!-->
<head>
  <meta http-equiv="x-ua-compatible" content="IE=9" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <link rel="stylesheet" type="text/css" href="../../include/manstyle.css" />
  <link rel="icon" type="image/png" href="../../images/ccgicon.png" />
  <link rel="shortcut icon" type="image/png" href="../../images/ccgicon.png" />
  <meta name="keywords" content="keywords:" />
  <meta name="keywords" content="functions: fread_GRID" />
  <meta name="keywords" content="functions: fwrite_GRID" />
  <meta name="keywords" content="fileformat: .grid" />
  <title>Binary Grid File Functions</title>
</head>
<body>
<div class="center-page">
  <!-- START MOE_HEADER -->
  <div class="MOE_HEADER">
    <a href="../../index.htm">
      <img src="../../images/ccglogo.png" />
    </a>
    <div class="moeversion"></div>
    Binary Grid File Functions
  </div>
<!-- END MOE_HEADER -->
<div class="content">

<h1>Syntax</h1>

<pre class="code">
[[shape, grid1, ...], [title, label1, ...], blob] = <a class="fcnlink"
href="#fread_GRID">fread_GRID</a> file

<a class="fcnlink" href=
"#fwrite_GRID">fwrite_GRID</a> [file, [shape, grid1, ...], [title, label1, ...], blob];
</pre>

<h1>Description</h1>

<p>An SVL binary grid file contains SVL grid information (shape, data) and
  optionally a file title, individual grid labels and application-specific
  binary data. The grid file format is described <a href=
  "#format">below</a>.</p>
  <hr noshade="noshade" />

  <a id="fread_GRID"></a>
<pre>
[[shape, grid1, ...], [title, label1, ...], blob] = <span class=
"fcndef">fread_GRID</span> file
</pre>

<p><tt>fread_GRID</tt> reads one or more data grids from <tt>file</tt>
  specified as a file number or (token) filename. All the resulting grids will
  be of the same shape <tt>shape</tt>. The file may have a <tt>title</tt>,
  and/or individual grids may have associated <tt>label</tt>s. Any
  application-specific binary data will be read and returned in
  <tt>blob</tt>.</p>

<p>Examples:</p>

<pre class="code">
svl&gt; [shape, grid] = first fread_GRID filenum
</pre>

<p>reads the first grid from the file specified by <tt>filenum</tt>,
  while</p>

<pre class="code">
svl&gt; [shape, grid1, grid2] = first fread_GRID filenum
</pre>

<p>reads the first two grids from the file.</p>

<pre class="code">
svl&gt; [[s, g1, g2], names, blob] = fread_grid &#39;filename&#39;
svl&gt; title  = first names;
svl&gt; labels = dropfirst names;
</pre>

<p>Reads two grids of shape <tt>s</tt> from the file specified by
  <tt>&#39;filename&#39;</tt>. <tt>title</tt> is the file title,
  <tt>labels</tt> are the individual grid titles, and <tt>blob</tt> is the
  application-specific binary data. The user is responsible for
  encoding/decoding the data in <tt>blob</tt>.</p>
<a id="fwrite_GRID"></a>
<hr noshade="noshade" />

<pre>
<span class=
"fcndef">fwrite_GRID</span> [file, [shape, grid1, ...], [title, label1, ...], blob];
</pre>

<p><tt>fwrite_GRID</tt> writes the specified data grids of shape
  <tt>shape</tt> to <tt>file</tt> specified as a file number or (token)
  filename. More than one grid can be written, but all must be of the same
  shape. The file <tt>title</tt>, each <tt>label</tt>, and the
  application-specific data, <tt>blob</tt>, are written if provided.</p>

<p>Examples:</p>

<pre class="code">
svl&gt; fwrite_GRID [filenum, [shape, grid]]
</pre>

<p>writes a single grid to the file specified by <tt>filenum</tt>.</p>

<pre class="code">
svl&gt; fwrite_GRID [&#39;filename&#39;, [s, g1, g2], [&#39;gradient&#39;, &#39;xgrad&#39;, &#39;ygrad&#39;], blob]
</pre>

<p>writes two grids of shape <tt>s</tt> to the file specified by
  <tt>&#39;filename&#39;</tt>. The file title is <tt>&#39;gradient&#39;</tt>,
  and the grids <tt>g1</tt> and <tt>g2</tt> are labeled
  <tt>&#39;xgrad&#39;</tt> and <tt>&#39;ygrad&#39;</tt>, respectively.</p>

<hr noshade="noshade" />

<h2>
<a id="format">Grid File Format</a></h2>

<p>An SVL binary grid file is composed for four sections:</p>
<ol>
  <li>A header, in which specific file-related information is stored;</li>
  <li>A shape section, in which the grid dimensions are described;</li>
  <li>The grid data, organized in accordance with the shape information;
  and</li>
  <li>Additional application-specific data.</li>
</ol>

<p>All integers are written in 4-byte LSB first values (int4l), and all
  floating point numbers are written in IEEE 4-byte LSB first values (IEEE4l)
  or IEEE 8-byte LSB first values (IEEE8l). This avoids problems when moving
  grid files between different architectures.</p>

<p>The four sections of the file are described below. The sections must
  appear in the file in the order given, and the information in each must
  appear in the exact order given in the tables.</p>

<h2>Header Information</h2>
<table class="titlebar">
<tr>
  <th>Entry</th>
  <th>Format</th>
  <th>Description</th>
</tr>
<tr>
  <td>ID Token</td>
  <td>5 characters</td>
  <td>&#39;#grid&#39;</td>
</tr>
<tr>
  <td>Format Version</td>
  <td>7 characters</td>
  <td>&#39;2008.03&#39;</td>
</tr>
<tr>
  <td>File Magic Number</td>
  <td>IEEE4l</td>
  <td>2008.03</td>
</tr>
<tr>
  <td>Future Expansion</td>
  <td>4 int1</td>
  <td>0&nbsp;0&nbsp;0&nbsp;0</td>
</tr>
<tr>
  <td>File Title Length (<i>N</i>)</td>
  <td>int4l</td>
  <td># of characters in title token</td>
</tr>
<tr>
  <td>File Title</td>
  <td><i>N</i> characters</td>
  <td>title token (optional)</td>
</tr>
</table>

<p>If the File Title is to be omitted, the File Title Length must be set to
  0.</p>

<h2>Shape Information</h2>
<table class="titlebar">
  <tr>
    <th>Entry</th>
    <th>Format</th>
    <th>Description</th>
  </tr>
  <tr>
    <td># Dimensions</td>
    <td>int4l</td>
    <td># of dimensions in grid</td>
  </tr>
  <tr>
    <td># Ticks_<i>i</i></td>
    <td>int4l</td>
    <td># of ticks in dimension <i>i</i></td>
  </tr>
  <tr>
    <td>Tick_coords_<i>i</i></td>
    <td>IEEE4l</td>
    <td>tick coordinate values for dimension <i>i</i>; there
    must be # Ticks_<i>i</i> such values</td>
  </tr>
</table>

<p># Ticks_<i>i</i> and Tick_coords_<i>i</i> are given for each dimension in
  the grid; the fields are interleaved. For example, in the grid file for a 2D
  grid (line breaks inserted for readability):</p>

  <p class="blockquote">
    ...header...<br />
    2<br />
    # Ticks_1<br />
    Tick_coords_1<br />
    # Ticks_2<br />
    Tick_coords_2<br />
    ...grid data...
  </p>

<p>All grids in a given grid file have the same shape.</p>

<h2>Grid Information</h2>
<table class="titlebar">
  <tr>
    <th>Entry</th>
    <th>Format</th>
    <th>Description</th>
  </tr>
  <tr>
    <td># Grids</td>
    <td>int4l</td>
    <td># of grids in the file</td>
  </tr>
  <tr>
    <td>Grid_<i>i</i> Label Length</td>
    <td>int4l</td>
    <td># of characters in grid label token (<i>N</i>)</td>
  </tr>
  <tr>
    <td>Grid_<i>i</i> Label</td>
    <td><i>N</i> characters</td>
    <td>label token (optional)</td>
  </tr>
  <tr>
    <td>Grid_<i>i</i> Data</td>
    <td>IEEE8l</td>
    <td>value at each gridpoint</td>
  </tr>
</table>

<p>The grid data is written to the file beginning at the origin of the grid
  box, with the highest dimension incrementing the fastest. For example, for a
  3D grid where <i>x</i> is dimension #1 with <i>N<sub>x</sub></i> ticks,
  <i>y</i> is dimension #2 with <i>N<sub>y</sub></i> ticks, and <i>z</i> is
  dimension #3 with <i>N<sub>z</sub></i> ticks, the data must be arranged as
  follows (line breaks inserted for readability):</p>
<div class="indent">
  <table class="noborder left">
    <tr>
      <td>x=1</td>
      <td>y=1</td>
      <td>z=[1..N<sub><i>z</i></sub>]</td>
    </tr>
    <tr>
      <td>x=1</td>
      <td>y=2</td>
      <td>z=[1..N<sub><i>z</i></sub>]</td>
    </tr>
    <tr>
      <td>&nbsp;</td>
      <td>...</td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>x=1</td>
      <td>y=N<sub><i>y</i></sub></td>
      <td>z=[1..N<sub><i>z</i></sub>]</td>
    </tr>
    <tr>
      <td>&nbsp;</td>
      <td>&nbsp;</td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>x=2</td>
      <td>y=1</td>
      <td>z=[1..N<sub><i>z</i></sub>]</td>
    </tr>
    <tr>
      <td>x=2</td>
      <td>y=2</td>
      <td>z=[1..N<sub><i>z</i></sub>]</td>
    </tr>
    <tr>
      <td>&nbsp;</td>
      <td>...</td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>x=2</td>
      <td>y=N<sub><i>y</i></sub></td>
      <td>z=[1..N<sub><i>z</i></sub>]</td>
    </tr>
    <tr>
      <td>&nbsp;</td>
      <td>&nbsp;</td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>x=N<sub><i>x</i></sub></td>
      <td>y=1</td>
      <td>z=[1..N<sub><i>z</i></sub>]</td>
    </tr>
    <tr>
      <td>x=N<sub><i>x</i></sub></td>
      <td>y=2</td>
      <td>z=[1..N<sub><i>z</i></sub>]</td>
    </tr>
    <tr>
      <td>&nbsp;</td>
      <td>...</td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>x=N<sub><i>x</i></sub></td>
      <td>y=N<sub><i>y</i></sub></td>
      <td>z=[1..N<sub><i>z</i></sub>]</td>
    </tr>
  </table>
</div>

<p>The three grid entries are repeated for each grid contained in the file.
  For example, in a file containing two grids (line breaks inserted for
  readability):</p>
  <p class="blockquote">
    ...shape information...<br />
    2<br />
    Grid_1 Label Length<br />
    Grid_1 Label<br />
    Grid_1 Data<br />
    Grid_2 Label Length<br />
    Grid_2 Label<br />
    Grid_2 Data<br />
    ...application-specific information...
  </p>

<p>If a Grid Label is to be omitted, the corresponding Grid Label Length must
  be set to 0.</p>

<h2>Application-Specific Binary Information</h2>
<table class="titlebar">
  <tr>
    <th>Entry</th>
    <th>Format</th>
    <th>Description</th>
  </tr>
  <tr>
    <td>Binary Blob Length</td>
    <td>int4l</td>
    <td># of bytes of binary data (<i>N</i>)</td>
  </tr>
  <tr>
    <td>Binary Blob</td>
    <td><i>N</i> int1</td>
    <td>binary data (optional)</td>
  </tr>
</table>

<p>If no application-specific information is present, the Binary Blob Length
  must be set to 0.</p>

<h1>See Also</h1>

<p><a href="grididx.htm">Grid Functions</a><br />
  <a href="gridval.htm">SVL Multidimensional Grids</a><br /></p>

<p><a class="svl" href="freadb.htm">freadb</a><br />
  <a class="svl" href="freadb.htm">fwriteb</a></p>
<!-- START MOE_FOOTER -->
  <div class="MOE_FOOTER">
    <img src="../../images/ccgicon.png" /> <a href="../../index.htm"></a>
<a href="../../legal.htm"></a> &copy;<span class="versionyear"></span>
    <a href="http://www.chemcomp.com"></a>. All rights reserved.<br />
    <a href="mailto:info@chemcomp.com"></a>
  </div><!-- END MOE_FOOTER -->
</div>
</div>
</body>
</html>

