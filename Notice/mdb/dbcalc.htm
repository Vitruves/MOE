<!DOCTYPE html>
<html>

<head>
  <meta http-equiv="x-ua-compatible" content="IE=9" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <link rel="stylesheet" type="text/css" href="../include/manstyle.css" />
  <link rel="icon" type="image/png" href="../images/ccgicon.png" />
  <link rel="shortcut icon" type="image/png" href="../images/ccgicon.png" />
  <meta name="keywords" content="panel: Molecular Database Calculator" />
  <meta name="keywords" content="panel: Database Calculator" />
  <title>Molecular Database Calculator</title>
</head>
<body>
<div class="center-page">
  <!-- START MOE_HEADER -->
  <div class="MOE_HEADER">
    <a href="../index.htm"><img src="../images/ccglogo.png" /></a>
    <a href="../index.htm"><div class="moeversion"></div></a>
    Molecular Database Calculator
  </div>
<!-- END MOE_HEADER -->
<div class="content">
  <ul>
    <li>
      <a href="#Panel">Using the Molecular Database Calculator</a>
    </li>
    <li>
      <a href="#CalculatorFunctions">Calculator Functions</a>
    </li>
    <li>
      <a href="#UserFunctions">User Functions</a>
    </li>
    <li>
      <a href="#Panel">Molecular Database Calculator Panel Reference</a>
    </li>
    <li>
      <a href="#SVL">SVL Commands</a>
    </li>
  </ul>

<p>The Molecular Database Calculator is similar to a standard hand-held
  calculator except that it also evaluates equations using values from a MOE
  molecular database. Numeric fields can be included in the equations allowing
  you to perform calculations on molecular databases in MOE. Furthermore, the
  capability to map a custom-designed function to the USER button gives you the
  ability to implement your own calculations and evaluate the function on
  multiple databases easily.</p>

<h1>
<a id="Panel">Using the Molecular Database
  Calculator</a></h1>

<p>To use the Calculator, first open the database
  into a Database Viewer.  A single calculator may be opened per
  database. The Calculator command is grayed out if the database is
  read-only.</p>

<p>Open a database in a Database Viewer and choose <nobr><b>DBV | Compute |
  Calculator</b></nobr>.</p>
  <img src="dbcalc/dbcalc.png" alt="Molecular Database Calculator" class="center" />

<p>Suppose you wish to create the following equation, assuming you have a
  database with two numeric fields named <tt>chi0</tt> and <tt>chi1</tt>:</p>
  <center>

<img src="dbcalc/eqn.png" class="center" />
  </center>
  <ol>
    <li>To insert the first database field into the equation, double-click on
    <tt>chi0</tt> in the list of available fields.</li>
    <li>Click on the + button.</li>
    <li>Double-click on <tt>chi1</tt> in the Available Fields list.

<p><b>Note:</b> If you make a mistake, you can either use the Del button
      on the Calculator to remove symbols, or edit the equation directly in the
      Equation display area.</p>
    </li>
    <li>Ideally, the new field created in the database should be named
    something that will remind you of how the values were calculated. In this
    case, we will replace the default name with the actual equation:
      <center>

<img src="dbcalc/dest.png" class="center" />
      </center>
    </li>
    <li>To evaluate the equation, press the Evaluate button. Evaluated results
    are written in the destination field of the database. The evaluation
    proceeds in an entry by entry manner.

    <p>If no fields are included in the equation, the result will still be
      written for each entry in the destination field. Suppose, for example,
      you were to evaluate the expression <tt>log 99</tt>. Each entry will
      still be evaluated (see table below).</p>
      
    <p>Note: if the destination field is left blank, the Calculator
      outputs the result(s) of the calculation to the SVL Commands
      Window.  In this case, a single number would be output.</p>

    <center><img src="dbcalc/log.png" class="center" /></center>
    </li>
  </ol>

<h1><a id="CalculatorFunctions">Calculator
  Functions</a></h1>

<p>The functions available in the calculator include the standard numerical,
  logarithmic, trigonometric and logical functions as well as additional
  statistical functions. Most functions operate on each entry (row based),
  however, there are several functions that operate on an entire column.</p>
  <center>

<img src="dbcalc/ccbuttons.1.png" class="center" />
  </center>

<p>The calculator function buttons can be divided into the following list of
  categories:</p>
  <ul>
    <li>
      <a href="#Constants">Constants</a>
    </li>
    <li>
      <a href="#RelationalOperators">Relational Operators</a>
    </li>
    <li>
      <a href="#RowBasedFunctions">Row-based Functions</a>
    </li>
    <li>
      <a href="#LogicalOperators">Logical Operators</a>
    </li>
    <li>
      <a href="#Numbers">Numbers</a>
    </li>
    <li>
      <a href="#ArithmeticOperators">Arithmetic Operators</a>
    </li>
    <li>
      <a href="#ColumnBasedFunctions">Column-based Functions</a>
    </li>
    <li>
      <a href="#EntryBasedFunctions">Entry-based Functions</a>
    </li>
    <li>
      <a href="#Miscellaneous">Miscellaneous</a>
    </li>
    <li>
      <a href="#UserFunctions">USER Functions</a>
    </li>
  </ul>

<h3><a id="Constants">Constants</a></h3>

<p>These functions take no arguments and return a constant value. The
  functions in this category are <tt>PI</tt> and <tt>e</tt>.</p>

<h3><a id="RelationalOperators">Relational
  Operators</a></h3>

<p>The relational operators are &lt;, &gt;, &lt;=, &gt;=, ==. These operators
  cannot be &quot;chained&quot; together. However, the use of parentheses
  solves this problem:</p>

<pre>
    x &lt; y &lt; z     // invalid
    x &lt; (y &lt; z) // valid
</pre>

<h3><a id="RowBasedFunctions">Row-based
  Functions</a></h3>

<p>Most of the calculator functions operate in a row-based manner, i.e. the
  equation is evaluated entry by entry.</p>
  <center>

<img src="dbcalc/row.png" class="center" />
  </center>

<h3><a id="LogicalOperators">Logical
  Operators</a></h3>

<p>The logical operators, <b>and</b> and <b>or</b>, perform row-based
  operations. Unit extension will apply.</p>

<h3><a id="Numbers">Numbers</a></h3>

<p>Numbers can be inserted into the equation using the number pad or by
  typing them into the equation area directly.</p>

<h3><a id="ArithmeticOperators">Arithmetic
  Operators</a></h3>

<p>The arithmetic operators are binary operators: they take two arguments in
  infix notation. The arguments may be fields, in which case the operation is
  performed on an entry by entry basis. For example,</p>

<pre>
    1 + 2
</pre>

<p>evaluates to 3 and is inserted in each entry of the result field. However,
  if we were to add two fields together:</p>

<pre>
    {a_nC} + {a_nF}
</pre>

<p>the result is a new field with the value of the corresponding entries
  under the fields a_nC and a_nF added together.</p>

<p>If the field contains vector values, the operation is only performed if
  the two vectors have the same number of elements. Unit extension will be
  applied if possible. If the vectors are of different length, and unit
  extension cannot be applied, then the equation is not evaluated and the entry
  is left blank.</p>

<p>Consider the following:</p>
  <img src="dbcalc/calc2.png" class="center" />

<p>In this example we have the following results:</p>
  <table class="noborder">
    <tr>
      <td><b>Entry</b></td>
      <td><b>Result</b></td>
    </tr>
    <tr>
      <td valign="top">Row 1</td>
      <td valign="top">The 4 in B is unit extended to each element in A.</td>
    </tr>
    <tr>
      <td valign="top">Row 2</td>
      <td valign="top">The vectors in A and B are of equal length so they are
      added element wise.</td>
    </tr>
    <tr>
      <td valign="top">Row 3</td>
      <td valign="top">The vectors in A and B are not of equal length and unit
      extension is not possible. No result is written.</td>
    </tr>
    <tr>
      <td valign="top">Row 4</td>
      <td valign="top">There is no value in A so no result is calculated.</td>
    </tr>
  </table>

<h3><a id="ColumnBasedFunctions">Column-based
  Functions</a></h3>

<p>This category of functions operate on an entire column of data. The data
  must be scalars, vectors will be ignored in the calculations. The
  column-based functions are grouped together in the Calculator:</p>
  <img src="dbcalc/colfcns.png" class="center" />

<p>If a column-based function is part of an equation, this function will be
  evaluated first and the result substituted into the equation.</p>
  <ul>
    <li><b>max</b>, <b>min</b> perform a lexicographic comparison on an entire
    column.</li>
    <li><b>mean</b> calculates the mean of a column.</li>
    <li><b>sum</b> calculates the sum of all values in a column.</li>
    <li><b>fquart</b>, <b>median</b>, <b>tquart</b> return the first quartile,
    median and third quartile of a column.</li>
    <li><b>std_dev</b> calculates the standard deviation of a column.</li>
  </ul>
  <img src="dbcalc/mean.png" class="center" />

<h3><a id="EntryBasedFunctions">Entry-based
  Functions</a></h3>

<p>Entry-based functions take no arguments and return a value based on the
  entry number itself.</p>
  <ul>
    <li><b>index</b> returns the entry number which the equation is currently
    being applied to.</li>
    <li><b>selected</b> returns the selection state (0 or 1) of the entry in
    the database. If the database is not open in a Database Viewer, the value
    of selected is 0 (non selected) for all entries.</li>
  </ul>

<h3><a id="Miscellaneous">Miscellaneous</a></h3>

<p><b>RAND</b> returns a real uniform random number ranging between 0 and 1
  each time a new entry is processed by the Calculator. RAND takes no
  arguments.</p>

<p>The <b>pow</b> operator is used in its infix form in the Calculator, as
  opposed to its postfix form in SVL. For example, at the SVL command line
  interface, one would type:</p>

<pre>
    pow [2,3]
    8
</pre>

<p>whereas, in the Calculator, the expression would be:</p>

<pre>
    2 pow 3
</pre>

<h1><a id="UserFunctions">USER Functions</a></h1>

<p>A user function may be used within the database equations by mapping a
  global function to the USER button. This is done through the text field:</p>
  <img src="dbcalc/user.png" class="center" />

<p>The following conditions apply to USER functions:</p>
  <ul>
    <li>The sole argument must be a numeric vector of any length.</li>
    <li>The function must return a numeric vector.</li>
  </ul>

<p>You can define a user-specific function in the Molecular Calculator by
  creating a global function and mapping it to the USER button.</p>

<p>Say, for instance, that the current database includes a field called
  Fahrenheit with temperatures in the Fahrenheit scale. You would like to add a
  field with Celsius values as well. To do so, you need to convert Fahrenheit
  to Celsius. You first create a global function, which for the purposes of
  this example we have called <tt>FahrenheitToCelsius</tt>, as:</p>

<pre>
    global function FahrenheitToCelsius v
        return (5/9)*(v-32);
    endfunction
</pre>

<p>Save and load the function, using the SVL Text Editor or otherwise.</p>

<p>In the Molecular Calculator, press the USER button and double-click on the
  Fahrenheit field to insert it into the equation.</p>

<p>The equation display area should display:</p>

<pre>
    USER {Fahrenheit}
</pre>

<p>In the USER Function field, enter the name of the function
  <tt>FahrenheitToCelsius</tt>. In the Destination field, enter the name of the
  database field (e.g. Celsius) that will contain the evaluated results. Press
  Evaluate.</p>

<h1><a id="PanelRef">Molecular Database Calculator Panel
  Reference</a></h1>

<p>The Molecular Database Calculator Panel includes the following
  options:</p>
  <table class="noborder">
    <tr>
      <td valign="top"><b>Database</b></td>
      <td valign="top">Path and filename of the database on which calculations
      will be performed. Results of the calculation are written to the database
      as they are available, in the Destination field.</td>
    </tr>
    <tr>
      <td valign="top"><span class="nobr"><b>Use Selected Entries Only</b></span></td>
      <td valign="top">If on, the calculation will only be performed on the
      selected entries of the database.</td>
    </tr>
    <tr>
      <td valign="top"><b>Use 0 for Empty Cells</b></td>
      <td valign="top">If on, empty cells will be treated as zeroes in
      <a href="#RowBasedFunctions">row-based calculations</a>.
      Note that, in
      <a href="#ColumnBasedFunctions">column-based calculations</a>,
      empty cells are always ignored.</td>
    </tr>
    <tr>
      <td valign="top"><b>History Buttons</b></td>
      <td valign="top">
        <img src="dbcalc/history.png" alt=
        "History Buttons in Molecular Database Calculator" />

<p>Buttons used to browse through the equation history:</p>
        <ul>
          <li>The &lt;&lt; button returns to the previous equation in the
          history list, whereas the &gt;&gt; button moves forward in the
          history list. A maximum of 25 successfully evaluated equations are
          kept in memory. Note that the equation history is lost when the
          Calculator is closed.</li>
          <li>&lt; removes the last symbol or field inserted in the equation.
          The &gt; button retrieves it. These buttons always apply to the last
          symbol in the equation.</li>
          <li>Del removes the last symbol from the equation.</li>
        </ul>
      </td>
    </tr>
    <tr>
      <td valign="top"><b>Equation Display Area</b></td>
      <td valign="top">
        Area in which the equation is displayed. You can type the equation in
        the display area or use the function buttons. When you press a button,
        the symbol is inserted at the end of the equation.

<p>field names can also be typed directly in the equation display area.
        They must be surrounded by {curly brackets}.</p>

<img src="dbcalc/display.png" alt=
        "Equation Display Area in Molecular Database Calculator" class="center" />
      </td>
    </tr>
    <tr>
      <td valign="top"><b>Available Fields</b></td>
      <td valign="top">
        List of numeric fields available in the specified database.
        Double-click on a field name in the list to insert it in the equation
        display area. Field names are surrounded by {curly brackets} in the
        equation.

<img src="dbcalc/ccfield.png" alt=
        "Available fields in Molecular Database Calculator" class="center" />
      </td>
    </tr>
    <tr>
      <td valign="top"><b>Function Buttons</b></td>
      <td valign="top">
        Operative buttons used to perform the <a href=
        "#CalculatorFunctions">calculator functions</a>.
      </td>
    </tr>
    <tr>
      <td valign="top"><b>USER Function</b></td>
      <td valign="top">
        <a href="#UserFunctions">User-defined function</a>, which can be used
        as a normal operator on the database.
      </td>
    </tr>
    <tr>
      <td valign="top"><b>Destination Field</b></td>
      <td valign="top">
        Name of the database field to which evaluated results are written. A
        default unique name is supplied. However, we suggest you give the
        destination field a meaningful name, i.e. a name that will give you
        some information on the equation used to calculate the values. If no
        destination field is specified, the output is sent to the SVL Commands
        window.

<p>The Destination field contains a shortcut list at the right of the
        field. This list holds the names of all numeric fields in the
        database.</p>

<img src="dbcalc/dest.png" alt=
        "Destination field in Molecular Database Calculator" class="center" />
      </td>
    </tr>
    <tr>
      <td valign="top"><b>Destination Type</b></td>
      <td valign="top">
        Type of database field to create. Only numeric types are allowed.

<img src="dbcalc/types.png" alt="Destination field Type" class="center" />
      </td>
    </tr>
    <tr>
      <td valign="top"><b>Evaluate</b></td>
      <td valign="top">
        Evaluates the equation. Once you press Evaluate, the button changes to
        Cancel, allowing you to stop the evaluation process at any time. When
        the computation is finished, the button reverts back to Evaluate.

<p>Results are written to the Destination field of the database. An
        error message will appear if the equation contains syntax errors.</p>
      </td>
    </tr>
    <tr>
      <td valign="top"><b>Clear</b></td>
      <td valign="top">Clears the equation display area.</td>
    </tr>
  </table>

<h1><a id="SVL">SVL Commands</a></h1>

<p><a class="svl" href=
  "../moe/fcnref/db_calc.htm#db_Calculator">db_Calculator</a></p>

<h1>See Also</h1>

<p><a href="db.htm">Molecular Database Viewer</a><br /></p>
  <!-- START MOE_FOOTER -->
  <div class="MOE_FOOTER">
    <img src="../images/ccgicon.png" /> <a href="../index.htm"></a>
<a href=
    "../legal.htm"></a> &copy;<span class="versionyear"></span> <a href="http://www.chemcomp.com"></a>. All
    rights reserved.<br />
    <a href="mailto:info@chemcomp.com"></a>
  </div><!-- END MOE_FOOTER -->
</div>
</div>
</body>
</html>

