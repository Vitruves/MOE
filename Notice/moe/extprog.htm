<!DOCTYPE html>
<html>




<!--
!!    MOE On-Line Manuals
!!    COPYRIGHT (C) CHEMICAL COMPUTING GROUP ULC.  ALL RIGHTS RESERVED.
!!-->
<head>
  <meta http-equiv="x-ua-compatible" content="IE=9" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <link rel="stylesheet" type="text/css" href="../include/manstyle.css" />
  <link rel="icon" type="image/png" href="../images/ccgicon.png" />
  <link rel="shortcut icon" type="image/png" href="../images/ccgicon.png" />
  <title>Interfacing to External Programs</title>
  <meta name="keywords" content="keywords: povray" />
</head>
<body>
<div class="center-page">
  <!-- START MOE_HEADER -->
  <div class="MOE_HEADER">
    <a href="../index.htm"><img src="../images/ccglogo.png" /></a>
    <a href="../index.htm"><div class="moeversion"></div></a>
    Interfacing to External Programs
  </div>
<!-- END MOE_HEADER -->
<div class="content">

<p>MOE can be interfaced to a variety of external programs. In certain MOE
  applications, third party software is seamlessly integrated as one of the
  accessible computational methods, for example, GOLD in docking or NAMD in
  molecular dynamics. In other cases, the clipboard is used as a medium for
  data transfer. This chapter describes how to set up for running MOE with
  external programs.</p>

<p>In some cases, all that is required is to specify the location of the
  executable program by setting a variable in the MOE <i>resource
  configuration</i> (RC) file, <tt>$HOME/.moe-rc</tt>. RC variables are
  commonly set by entering the appropriate commands at the <a href=
  "gui/svlcommands.htm">SVL Command Line Interface</a> (CLI). The prefix</p>

<pre>
    svl&gt;
</pre>

<p>is used to indicate the CLI; do not enter these four characters when
  typing the command. When a MOE session terminates normally, any RC variables
  set during the session are saved to the local <tt>.moe-rc</tt> file.</p>

<p><span class="tip">Tip&nbsp;</span> The RC file can be edited directly
  using a text editor. Lines in the RC file are of the form</p>

<pre>
    rc.variable=<i>value</i>
</pre>

<p>For example,</p>

<pre>
    gaussian.exe=/home/user/g16/g16
</pre>

<p>Note that when a MOE session terminates normally, it overwrites the local
  <tt>.moe-rc</tt> file. Therefore, prior to editing <tt>.moe-rc</tt>, be sure
  that all MOE sessions are closed (i.e. do not edit the <tt>.moe-rc</tt> file
  from within MOE).</p>
  <ul>
    <li>
      <a href="#ConformationGeneration">Conformation Analysis</a>
      <ul>
        <li><a href="#Omega">Omega Conformations</a></li>
        <li><a href="#Corina">Corina Conformations</a></li>
        <li><a href="#Mogul">Mogul</a></li>
      </ul>
    </li>
    <li>
      <a href="#Docking">Docking</a>
      <ul>
        <li><a href="#GOLD">GOLD</a></li>
        <li><a href="#FlexStar">Flex*</a></li>
        <li><a href="#SurflexDock">Surflex-Dock</a></li>
      </ul>
    </li>
    <li>
      <a href="#MD">Molecular Dynamics</a>
      <ul>
        <li><a href="#NAMD">NAMD</a></li>
        <li><a href="#AMBER">AMBER</a></li>
      </ul>
    </li>
    <li>
      <a href="#QM">Quantum Mechanics</a>
      <ul>
        <li><a href="#MOPAC">MOPAC</a></li>
        <li><a href="#Gaussian">Gaussian</a></li>
        <li><a href="#GAMESS">GAMESS</a></li>
        <li><a href="#ADF">Amsterdam Density Functional</a></li>
      </ul>
    </li>
    <li>
      <a href="#Rendering">Rendering and Animation</a>
      <ul>
        <li><a href="#PovRay">Pov-Ray Ray Tracer</a></li>
        <li><a href="#Word">Export to Word, PowerPoint</a></li>
        <li><a href="#MPlayer">MPlayer, Windows Media Player, Apple QuickTime
        Player</a></li>
      </ul>
    </li>
    <li>
      <a href="#2DSketchers">2D Sketchers</a>
      <ul>
        <li><a href="#2DSketchers">Isis/Draw</a></li>
        <li><a href="#2DSketchers">Biovia (Symyx) Draw</a></li>
        <li><a href="#2DSketchers">ChemDraw</a></li>
        <li><a href="#2DSketchers">MarvinSketch</a></li>
        <li><a href="#2DSketchers">JDraw</a></li>
      </ul>
    </li>
    <li>
      <a href="#Pipelining">Pipelining</a>
      <ul>
        <li><a href="#PPilot">Pipeline Pilot</a></li>
        <li><a href="#KNIME">KNIME</a></li>
      </ul>
    </li>
    <li>
      <a href="#RelDatabases">Relational Databases</a>
      <ul>
        <li><a href="#RelDatabases">Oracle</a></li>
        <li><a href="#RelDatabases">Microsoft SQL Server</a></li>
        <li><a href="#RelDatabases">IBM DB2</a></li>
        <li><a href="#RelDatabases">PostgreSQL</a></li>
        <li><a href="#RelDatabases">MySQL</a></li>
      </ul>
    </li>
  </ul>

<p>Chemical Computing Group ULC. (CCG) makes no copyright, confidentiality,
  or other intellectual property rights claim regarding any of the programs
  listed below. CCG has limited its activities in relation to these programs to
  providing executables for various computer platforms and authoring
  interoperability software. CHEMICAL COMPUTING GROUP ULC. AND ITS AFFILIATES
  DISCLAIM ALL WARRANTIES WITH REGARD TO EXTERNAL PROGRAMS, INCLUDING ALL
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.</p>
  <hr noshade="noshade" />

<h1>
<a id="ConformationGeneration">Conformation
  Generation</a></h1>

<h2><a id="Omega">Omega Conformations</a></h2>

  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">OMEGA</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;"><a href=
      "http://www.eyesopen.com/omega">OpenEye Scientific Software</a>
      distributes OMEGA commercially.</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">Molecular conformation generation
      software.</td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>The OMEGA program must be obtained, installed, and run to produce OEB
  files having extension <tt>.oeb</tt> or <tt>.oeb.gz</tt>.</p>

<p>A special extractor program, <tt>oeb2sdconf</tt>, is needed by MOE to
  interpret the OEB files. This extractor converts the OEB data into an SD
  format with a special convention on conformation and energy encoding. The
  extractor program is part of the OMEGA distribution and is not included as
  part of the MOE distribution; it must be installed in a location accessible
  to the MOE executable.</p>

<p>The name of the extractor program is by default <tt>oeb2sdconf</tt>. If
  the program has a different name, the <tt>oe_omega.exe</tt> RC variable must
  be set to instruct MOE to use that name. For example, if the program name is
  actually <tt>new_oeb2sdconf</tt>, issue the following command:</p>

<pre>
    svl&gt; SetRC ['oe_omega.exe', 'new_oeb2sdconf']
</pre>

<p>The extractor must be located either in a directory that is part of the
  system <tt>PATH</tt> (<tt>$PATH</tt> on Unix-type systems, <tt>%PATH%</tt> on
  Windows) or in the <tt>bin</tt> subdirectory of the OMEGA directory which is
  specified by the <tt>OE_DIR</tt> environment variable; i.e.
  <tt>$OE_DIR/bin</tt> on Linux or <tt>%OE_DIR%/bin</tt> on Windows.</p>

<h3>Running with MOE</h3>

<p>MOE's <a href="../apps/ph4_search.htm">Pharmacophore Search</a>
  application accepts OEB files as input, and transparently operates on them.
  There are no special options for OEB files. OEB files are interpreted as 1
  molecule per SD entry, i.e. an &quot;unpacked&quot; format.</p>
  <hr noshade="noshade" />

<h2><a id="Corina">Corina Conformations</a></h2>

  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">Corina</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;"><a href="http://www.mn-am.com">Molecular
      Networks GmbH</a> distributes Corina commercially.</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">3D structure generator.</td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>Corina must be purchased and installed on an appropriate workstation.</p>

<p>By default, the Corina executable is expected to be named <tt>corina</tt>,
  and to be found in the current search path (defined by the environment
  variable PATH, whose value is accessed as <tt>$PATH</tt> on Unix,
  <tt>%PATH%</tt> on Windows). If this is not the case, then the full directory
  path of the Corina executable, including the name of the binary executable,
  must be specified using the <tt>corina.exe</tt> RC variable, e.g.</p>

<pre>
    svl&gt; SetRC ['corina.exe', '/usr/local/bin/corina']
</pre>

<h3>Running with MOE</h3>

<p>Corina can be invoked by MOE's <a href="../mdb/wash.htm">Database
  Wash</a> panel to generate and refine 3D structures. Open a database in MOE
  using</p>

<p class="blockquote"><span class="menu">MOE | File | Open</span></p>

<p>Open the Wash panel from the Database Viewer:</p>

<p class="blockquote"><span class="menu">DBV | Compute | Molecule |
  Wash</span></p>
  <img src="extprog/wash_Corina.png" alt=
    "Wash panel with Corina highlighted" class="center" />

<p>After the <b>Coordinates</b> box is checked, the user can specify which
  representation will be used. Among the choices, <b>Corina</b> can be selected
  to rebuild and refine 3D structures; for example, to convert SMILES or 2D
  structures to 3D.</p>

<h3>SVL Commands</h3>

<p>The <a class="svl" href="fcnref/corinafcn.htm">CorinaTest</a> function is
  used to verify the installation of the Corina program.</p>

<pre>
    svl&gt; CorinaTest []
</pre>

<p>If the function returns the empty token <tt>''</tt>, the
  installation appears correct, and Corina will likely function correctly.
  Otherwise, a diagnostic error message will be returned.</p>

<p>The remaining <a class="svl" href="fcnref/corinafcn.htm">Corina*</a>
  functions are used to generate 3D coordinates for input molecules.</p>
  <hr noshade="noshade" />

<h2><a id="Mogul">Mogul</a></h2>

  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">Mogul</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;">The <a href=
      "http://www.ccdc.cam.ac.uk">Cambridge Crystallographic Data Center</a>
      distributes Mogul commercially.</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">3D structure analysis software</td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>Mogul must be purchased and installed on an appropriate machine. It
  provides a graphical user interface when run outside MOE, it can be run as a
  MOE application or as a SOAP service of MOE/web. For instructions on how to
  set up MOE/web, please see <a href=
  "../install/web_inst.htm#ServerA">Preparing the Web Server</a>.</p>

<p>The full directory path of the Mogul executable, or URL of the Mogul SOAP
  service, must be specified using either the <tt>mogul.exe</tt> RC variable,
  e.g.</p>

<pre>
    svl&gt; SetRC ['mogul.exe', 'C:/CCDC/ccdc-software/mogul/mogul.exe']
</pre>

<p>or the environment variable <tt>MOGUL_EXE</tt>. The value of the
  <tt>mogul.exe</tt> RC variable can be set with the <a href=
  "../apps/mogul.htm#Settings">Mogul Analysis Settings Panel</a>. Please
  consult the Mogul User's Guide for the exact name and location of the
  Mogul executable for your operating system.</p>

<h3>Running with MOE</h3>

<p>Mogul can be invoked by MOE's <a href="../apps/mogul.htm#Panel">Mogul
  Analysis</a> application. Load a structure into MOE using</p>

<p class="blockquote"><span class="menu">MOE | File | Open</span></p>

<p>and start Mogul Analysis with:</p>

<p class="blockquote"><span class="menu">MOE | Compute | Conformations |
  Mogul Analysis</span></p>

<img src="extprog/mogulpanel.png" alt=
  "Mogul Analysis Panel" class="center" />

<p>Select at least two adjacent heavy atoms and press <b>Run</b> to start the
  Mogul analysis. A message appears in the main MOE window while Mogul is
  running. Upon completion, the structural information is loaded into the Mogul
  Analysis panel. Mogul information can also be shown in the <b>Profile</b>
  button in the <a href="../moe/gui/mainwin.htm#Footer">MOE Window
  Footer</a>.</p>

<p>For further details about Mogul, please see its documentation. For further
  details about Mogul Analysis, please see its <a href=
  "../apps/mogul.htm">documentation</a>.</p>
  <hr noshade="noshade" />

<h1><a id="Docking">Docking</a></h1>

<p>To select an external docking package, choose the <b>External</b>
  placement method from the left hand buttons in the <a href=
  "../apps/docking.htm">Dock</a> panel.</p>

<img src="extprog/dock_external.png" alt=
  "Docking Panel" class="center" />

<p>The preferred external docking package may be selected by activating the
  program-specific radio.</p>

<h2><a id="GOLD">GOLD</a></h2>

  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">GOLD (Genetic Optimizer for Ligand
      Docking)</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;"><a href=
      "http://www.ccdc.cam.ac.uk">Cambridge Crystallographic Data Centre</a>
      (CCDC) distributes GOLD commercially.</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">Protein-ligand docking software.</td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>GOLD must be purchased and installed on an appropriate workstation.</p>

<p>The location of the GOLD executable, along with various options specific
  to the GOLD program are set in the <a href=
  "../apps/docking.htm#GOLD">Configure GOLD Placement</a> panel.</p>

<h3>Running with MOE</h3>

<p>The GOLD program is accessible through MOE's <a href=
  "../apps/docking.htm">Dock</a> application, which can be opened using:</p>

<p class="blockquote"><span class="menu">MOE | Compute | Simulations |
  Dock</span></p>

<p>When the <b>External</b> placement method is activated, it is possible to
  select <b>GOLD</b> as the docking engine to be invoked by MOE for generating
  bound poses. To configure the GOLD executable, press the <img src=
  "../images/gear_icon.png" alt="Configuration Gear" class="icon"/>
  button.</p>

<img src="extprog/goldcfg1.png" alt=
  "GOLD Configuration" class="center" />

<img src="extprog/goldcfg2.png" alt=
  "GOLD Configuration" class="center" />

<p>The full directory path must be specified in the <b>Executable</b> text
  field; either type the name or press <b>Browse</b> to select the binary file
  using a file browser. GOLD requires a temporary work area for storing
  intermediate data. By default, this is the directory pointed to by the
  environment variable <tt>TMP</tt> (<tt>$TMP</tt> on Unix, <tt>%TMP%</tt> on
  Windows). Otherwise, the full directory location of this must be provided in
  the <b>Working Dir</b> text field.</p>

<p>The executable location and working directory can be saved in the MOE RC
  file under the RC entries <tt>gold.exe</tt> and <tt>gold.dir</tt>,
  respectively, so that they can be used without having to be re-entered in
  subsequent docking sessions. For example, if the executable <tt>gold</tt> is
  in the directory <tt>/opt/goldsuite-5.0</tt> and the working directly is
  pointed to by the environment variable <tt>TMP</tt>:</p>

<pre>
    svl&gt; SetRC ['gold.exe', '/opt/CCDC/ccdc-software/gold/GOLD/bin/gold_auto']
    svl&gt; SetRC ['gold.dir', TMP]
</pre>

<p>Note that <tt>TMP</tt> is a built-in SVL constant that points to the MOE
  temporary directory. If a different environment variable is to be used, its
  value can be obtained using <a class="svl" href=
  "../svl/fcnref/getenv.htm">getenv</a>:</p>

<pre>
    svl&gt; SetRC ['gold.dir', getenv 'MY_TMP'] // both Unix and Windows
</pre>

<p>Press <b>Test</b> to verify that GOLD has been properly installed. The
  test may take a few seconds. Any errors will be printed to the <a href=
  "gui/svlcommands.htm">SVL Commands window</a>.</p>

<p>For details about GOLD-specific running options, please see the <a href=
  "../apps/docking.htm#GOLD">Docking</a> chapter.</p>
  <hr noshade="noshade" />

<h2><a id="FlexStar">Flex*</a></h2>

<p class="blockquote"></p>
  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">Flex*</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;"><a href=
      "http://www.biosolveit.de">BioSolveIT GmbH</a> distributes Flex*
      commercially.</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">Protein-ligand docking software.</td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>Flex* must be purchased and installed on an appropriate workstation.</p>

<p>The location of the Flex* executable, along with various options specific
  to the Flex* program are set in the <a href=
  "../apps/docking.htm#FlexStar">Configure Flex* Placement</a> panel, shown in
  the section below.</p>

<h3>Running with MOE</h3>

<p>The Flex* program is accessible through MOE's <a href=
  "../apps/docking.htm">Dock</a> application, which can be opened using:</p>

<p class="blockquote"><span class="menu">MOE | Compute | Simulations |
  Dock</span></p>

<p>When the <b>External</b> placement method is activated, it is possible to
  select <b>Flex*</b> as the docking engine to be invoked by MOE for generating
  bound poses. To configure the Flex* executable, press the <img src=
  "../images/gear_icon.png" alt="Configuration Gear" class="icon" /> button.</p>

<img src="extprog/flexcfg1.png" alt=
  "Flex* Configuration" class="center" />

<img src="extprog/flexcfg2.png" alt=
  "Flex* Configuration" class="center" />

<p>The full directory path must be specified in the <b>Executable</b> text
  field; either type the name or press <b>Browse</b> to select the binary file
  using a file browser. Flex* requires a configuration file to run; the full
  directory path of this location must be specified in the <b>Config File</b>
  text field. For information on how to setup this file, please refer to
  documentation provided by <a href=
  "http://www.biosolveit.com">BioSolveIT</a>.</p>

<p>Flex* also requires a temporary work area for storing intermediate data.
  By default, this is the directory pointed to by the environment variable
  <tt>TMP</tt> (<tt>$TMP</tt> on Unix, <tt>%TMP%</tt> on Windows). Otherwise,
  the full directory location of this must be provided in the <b>Working
  Dir</b> text field.</p>

<p>The executable location, configuration file, and working directory all can
  be saved in the MOE RC file under the RC entries <tt>bsit.exe</tt>,
  <tt>bsit.cfg</tt>, and <tt>bsit.dir</tt>, respectively, so that they can be
  used without having to be re-entered in subsequent docking sessions. For
  example:</p>

<pre>
    svl&gt; SetRC ['bsit.exe', '/opt/bsit/lnux/leadit']
    svl&gt; SetRC ['bsit.cfg', '/opt/bsit/lnux/settings.pxx']
    svl&gt; SetRC ['bsit.dir', TMP]
</pre>

<p>Note that <tt>TMP</tt> is a built-in SVL constant that points to the MOE
  temporary directory. If a different environment variable is to be used, its
  value can be obtained using <a class="svl" href=
  "../svl/fcnref/getenv.htm">getenv</a>:</p>

<pre>
    svl&gt; SetRC ['bsit.dir', getenv 'MY_TMP'] // both Unix and Windows
</pre>

<p>Press <b>Test</b> to verify that Flex* has been properly installed. The
  test may take a few seconds. Any errors will be printed to the <a href=
  "gui/svlcommands.htm">SVL Commands window</a>.</p>

<p>For details about Flex*-specific running options, please see the <a href=
  "../apps/docking.htm#FlexStar">Docking</a> chapter.</p>
  <hr noshade="noshade" />

<h2><a id="SurflexDock">Surflex-Dock</a></h2>

  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">Surflex-Dock</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;"><a href=
      "http://www.biopharmics.com">BioPharmics LLC</a> distributes Surflex-Dock
      commercially.</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">Protein-ligand docking software.</td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>Surflex-Dock must be purchased and installed on an appropriate
  workstation.</p>

<p>The location of the Surflex-Dock executable, along with various options
  specific to the Surflex-Dock program are set in the <a href=
  "../apps/docking.htm#SurflexDock">Configure Surflex-Dock Placement</a> panel,
  shown in the section below.</p>

<h3>Running with MOE</h3>

<p>The Surflex-Dock program is accessible through MOE's <a href=
  "../apps/docking.htm">Dock</a> application, which can be opened using:</p>

<p class="blockquote"><span class="menu">MOE | Compute | Simulations |
  Dock</span></p>

<p>When the <b>External</b> placement method is activated, it is possible to
  select <b>Surflex-Dock</b> as the docking engine to be invoked by MOE for
  generating bound poses. To configure the Surflex-Dock executable, press the
  <img src="../images/gear_icon.png" alt="Configuration Gear" class="icon" />
  button.</p>

<img src="extprog/surflexcfg1.png" alt=
  "Surflex-Dock Configuration" class="center" />

<img src="extprog/surflexcfg2.png" alt=
  "Surflex-Dock Configuration" class="center" />

<p>The full directory path must be specified in the <b>Executable</b> text
  field; either type the name or press <b>Browse</b> to select the binary file
  using a file browser.</p>

<p>Surflex-Dock also requires a temporary work area for storing intermediate
  data. By default, this is the directory pointed to by the environment
  variable <tt>TMP</tt> (<tt>$TMP</tt> on Unix, <tt>%TMP%</tt> on Windows).
  Otherwise, the full directory location of this must be provided in the
  <b>Working Dir</b> text field.</p>

<p>The executable location, and working directory all can be saved in the MOE
  RC file under the RC entries <tt>surflex-dock.exe</tt>, and
  <tt>surflex-dock.dir</tt> respectively, so that they can be used without
  having to be re-entered in subsequent docking sessions. For example:</p>

<pre>
    svl&gt; SetRC ['surflex-dock.exe', '/opt/Surflex/bin/surflex-dock.exe']
    svl&gt; SetRC ['surflex-dock.dir', TMP]
</pre>

<p>Note that <tt>TMP</tt> is a built-in SVL constant that points to the MOE
  temporary directory. If a different environment variable is to be used, its
  value can be obtained using <a class="svl" href=
  "../svl/fcnref/getenv.htm">getenv</a>:</p>

<pre>
    svl&gt; SetRC ['surflex-dock.dir', getenv 'MY_TMP'] // both Unix and Windows
</pre>

<p>Press <b>Test</b> to verify that Surflex-Dock has been properly installed.
  The test may take a few seconds. Any errors will be printed to the <a href=
  "gui/svlcommands.htm">SVL Commands window</a>.</p>

<p>For details about Surflex-Dock-specific running options, please see the
  <a href="../apps/docking.htm#SurflexDock">Docking</a> chapter.</p>
  <hr noshade="noshade" />

<h1><a id="MD">Molecular Dynamics</a></h1>

<h2><a id="NAMD">NAMD</a></h2>

  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">NAMD2 (Not (just) Another Molecular
      Dynamics program)</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;">The Theoretical and Computational
      Biophysics (TCB) Group at the <a href=
      "http://www.ks.uiuc.edu/Research/namd">University of Illinois</a>
      provides NAMD at no cost.</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">
        A molecular dynamics simulation package written using the Charm++
        parallel programming model.

<p><b>Reference:</b></p>

<p>Nelson, M., Humphrey, W., Gursoy, A., Dalke, D., Kal&eacute;, L.,
        Skeel, R.D., Schulten, K.; NAMD &ndash; A Parallel, Object-oriented
        Molecular Dynamics Program, <i>J. Supercomputing App. 10</i>
        (<b>1996</b>) 251&ndash;268.</p>
      </td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>NAMD2 must be obtained and installed on the appropriate
  workstation(s).</p>

<p>It is best to put the directory of the <tt>namd2</tt> executable in the
  system <tt>PATH</tt> environment variable:</p>

<p>On Linux, concatenate the directory containing <tt>namd2</tt> to the
  current <tt>PATH</tt> using</p>

<pre>
    unix&gt; setenv PATH $PATH;<i>namd_directory</i>
</pre>

<p>or, for some macOS and Linux systems,</p>

<pre>
    unix&gt; export PATH=$PATH;<i>namd_directory</i>
</pre>

<p>On Windows, start a command prompt window using</p>

<p class="blockquote"><span class="menu">Start | Run |
  <tt>cmd</tt></span></p>

<p>At the command line, enter</p>

<pre>
    C:\&gt; set PATH=%PATH%;<i>namd_directory</i>
</pre>

<h3>Running with MOE</h3>

<p>The NAMD program is run from within MOE using the <a href=
  "../apps/md.htm#NAMD">Molecular Dynamics</a> application and by selecting
  <b>NAMD</b> from the left hand side button bar.</p>

<img src="extprog/md_namd.png" alt=
  "MOE | Compute | Simulations | Dynamics" class="center" />

<p>When this algorithm is selected, a configuration gear
<img src="../images/gear_icon.png" alt= "Configure Gear" class="icon" /> icon
becomes available
for configuring NAMD, including specifying the name of the executable.
The full path specification of the location
of the NAMD program must be provided if it is not part of the system
search path.</p>

<p>Please refer to the chapter on <a href="../apps/md.htm#NAMD">Molecular
  Dynamics</a> for details on how the set up and run a molecular dynamics
  simulation using NAMD.</p>

<h3>SVL Commands</h3>

<p><a class="svl" href="fcnref/mdfcn.htm">NAMD_Initialize</a> is used to
  prepare for a NAMD dynamics run, performing some initialization
  operations.<br />
  <a class="svl" href="fcnref/mdfcn.htm">MD_Import</a> is used to import NAMD
  trajectory data into a MOE database.</p>
  <hr noshade="noshade" />

<h2><a id="AMBER">AMBER</a></h2>

  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">AMBER</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;">
        <a href="http://ambermd.org">University of California</a>
        distributes AMBER under a licensing fee structure.
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">
	A package of molecular simulation programs, distributed in two
	parts, AmberTools, and AMBER. Non-commercial use is free of charge
	for both parts. Commercial use of the second part, AMBER, requires
	a license payment.

	<p><b>Reference:</b></p>

	<p>Salomon-Ferrer, R., Case, D.A., Walker, R.C.;
	  An overview of the Amber biomolecular simulation package;
	  <i>WIREs Comput. Mol. Sci. 3</i> (<b>2013</b>) 198&ndash;210.</p>

      </td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>AmberTools and AMBER must be obtained and installed on the appropriate
  workstation(s).
  The AMBER program is distributed with multiple executables, from which MOE
  supports the CUDA enabled pmemd.cuda (double and single precision).
</p>

<p>
  The <tt>AMBERHOME</tt> environment variable must be set to the AMBER
  installation directory.  MOE emphasizes AMBER GPU simulations (which
  are the most efficient).  If CPU or MPI simulations are desired, then
  the scripts generated by MOE will have to be modified manually: change
  the <tt>amber=</tt> variable to the name of the AMBER executable to use.
</p>

<p>
  For GPU simulations, the <tt>CUDA_VISIBLE_DEVICES</tt> must be set to a
  comma-separated list of devices to use during the simulation.  Often
  this environment variable is already set (e.g. in HPC queueing systems).
  The location of the CUDA library must be included in the
  <tt>LD_LIBRARY_PATH</tt> environment variable (if not already present):
</p>

<pre>
      linux&gt; setenv CUDA_VISIBLE_DEVICES=0
      linux&gt; setenv LD_LIBRARY_PATH $LD_LIBRARY_PATH;<i>cuda_directory</i>
</pre>

<h3>Running with MOE</h3>

<p>AMBER is run from within MOE using the <a href=
  "../apps/md.htm#AMBER">Molecular Dynamics</a> application and by selecting
  <b>AMBER</b> from the left hand side button bar.</p>

<img src="extprog/md_amber.png" alt=
  "MOE | Compute | Simulations | Dynamics" class="center" />

<p>Please refer to the chapter on <a href="../apps/md.htm#AMBER">Molecular
  Dynamics</a> for details on how the set up and run a molecular dynamics
  simulation using AMBER.</p>

<h3>SVL Commands</h3>

<p><a class="svl" href="fcnref/mdfcn.htm">AMBER_Initialize</a> is used to
  prepare for an AMBER dynamics run, performing some initialization
  operations.<br />
  <a class="svl" href="fcnref/tifcn.htm">AMBER_TI_Initialize</a> is used to
  to generate simulation files for AMBER's Thermodynamic Integration
  functions to calculate the relative free energy of binding of
  a collection of ligands.<br />
  <a class="svl" href="fcnref/mdfcn.htm">MD_Import</a> is used to import AMBER
  trajectory data into a MOE database.</p>
  <hr noshade="noshade" />

<h1><a id="QM">Quantum Mechanics</a></h1>

<p>Several applications in MOE can interface with a variety of semi-empirical
  and QM packages. Once the external software packages are installed and
  configured, they become available in the panel's <b>QM&nbsp;Engine</b>
  menu.</p>

<img src="../apps/scf/setup1.png" alt=
  "MOE | Compute | Simulations | SCF Calculation" class="center" />

<p><br /></p>
  <hr noshade="noshade" />

<h2><a id="MOPAC">MOPAC</a></h2>

  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">OpenMOPAC</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;">
        <a href="http://openmopac.net">Stewart Computational Chemistry</a>
        released MOPAC under an
        <a href="https://github.com/openmopac/mopac">open source license</a>.
        It is currently maintained by the
        <a href="https://molssi.org">Molecular Sciences Software Institute
        (MolSSI)</a>.
        A recent version of OpenMOPAC is provided as part of the MOE
        distribution.

<p>CHEMICAL COMPUTING GROUP ULC. AND ITS AFFILIATES DISCLAIM ALL
        WARRANTIES WITH REGARD TO THE MOPAC PROGRAM, INCLUDING ALL IMPLIED
        WARRANTIES OF MERCHANTABILITY AND FITNESS: THE MOPAC PROGRAM IS
        PROVIDED &quot;AS-IS&quot;.</p>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">A semi-empirical molecular orbital
      software program.</td>
    </tr>
  </table>

<h3>Running with MOE</h3>

<p>The MOPAC semi-empirical engine can be run on a molecule in MOE. Load a
  molecule into MOE using:</p>

<p class="blockquote"><span class="menu">MOE | File | <a href=
  "gui/fileopen.htm">Open</a></span></p>

<p>or use the <span class="menu">MOE | RHS | <a href=
  "molsystems/build.htm">Builder</a></span> to build a small molecule.</p>

<p>MOPAC is invoked using:</p>

<p class="blockquote"><span class="menu">MOE | Compute | Simulations |
  <a href="../apps/scf.htm">SCF Calculation</a></span></p>

<p>MOPAC can also be used by the <a href=
  "../apps/confsrch.htm"><b>Conformation&nbsp;Search</b></a> and <a href=
  "../apps/emin.htm"><b>Energy&nbsp;Minimize</b></a> applications which can be
  run on a molecule in MOE or on a database. These can be found in the
  <span class="menu">MOE | Compute</span> or <span class="menu">DBV | Compute |
  Molecule</span> menus.</p>
  <p>
  As MOPAC can perform constrained minimization, it can be used by the
  <a href="../apps/torprofile.htm"><b>Torsion&nbsp;Profile</b></a> application.
</p>

<h3>SVL Commands</h3>

<p>MOPAC can be used via the <a href="../svl/fcnref/scffcn.htm">SCF Functions</a>.
</p>
  <hr noshade="noshade" />

<h2><a id="Gaussian">Gaussian</a></h2>

  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">Gaussian</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;"><a href=
      "http://www.gaussian.com">Gaussian, Inc.</a> distributes Gaussian as
      commercial software.</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">An <i>ab initio</i> quantum chemistry
      package.</td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>
A version of Gaussian must be purchased and installed (per Gaussian's
documentation) on the appropriate
workstation in order to perform calculations using this engine.
</p>

<p>In order to execute Gaussian from MOE, the RC variable
  <tt>gaussian.exe</tt> must be set. This is the full path to the local
  executable or to a shell script that runs Gaussian in the local environment.
  For example, if the Gaussian executable <tt>g16</tt> has been installed in
  the directory <tt>/opt/g16</tt>:</p>

<pre>
    svl&gt; SetRC ['gaussian.exe', '/opt/g16/g16']
</pre>

<p>If, however, a shell script <tt>runGaussian.sh</tt> from the direectory
  <tt>$HOME/bin</tt> is used, this would be:</p>

<pre>
    svl&gt; SetRC ['gaussian.exe', '$HOME/bin/runGaussian.sh']
</pre>

<p>
If g09 is used, merely change all occurrences of g16 in the above example to
g09.  If <tt>gaussian.exe</tt> is undefined, the
<a href="../appendix/settings.htm#MOEWeb">Default MOE/web Server</a>
will be used for all calculations.  In this case, the account or environment
running MOE/web must be properly configured to run Gaussian.
</p>
<p>MOE assumes that external scripts run the <tt>formchk</tt> and
  <tt>freqchk</tt> utilities to create the information needed to process the
  Gaussian output. Such scripts can contain whatever is required to use the
  local computing environment to run Gaussian.</p>

<p>Either form of the command will receive two arguments: the first is the
  appropriate input file and the second is the appropriate output file for the
  Gaussian task being performed.</p>

<h3>Running with MOE</h3>

<p>The Gaussian QM engine can be run on a molecule in MOE. Load a molecule
  into MOE using:</p>

<p class="blockquote"><span class="menu">MOE | File | <a href=
  "gui/fileopen.htm">Open</a></span></p>

<p>or use the <span class="menu">MOE | RHS | <a href=
  "molsystems/build.htm">Builder</a></span> to build a small molecule.</p>

<p>Gaussian is invoked using:</p>

<p class="blockquote"><span class="menu">MOE | Compute | Simulations |
  <a href="../apps/scf.htm">SCF Calculation</a></span></p>

<p>
Gaussian can also be used by the
<a href="../apps/confsrch.htm"><b>Conformation&nbsp;Search</b></a> and
<a href="../apps/emin.htm"><b>Energy&nbsp;Minimize</b></a>
applications which can be
run on a molecule in MOE or on a database. These can be found in the
<span class="menu">MOE | Compute</span> or <span class="menu">DBV | Compute |
Molecule</span> menus.  Gaussian can also be used with the
<a href="../apps/torprofile.htm"><b>Torsion&nbsp;Profile</b></a>
application which can be run on a molecule in MOE via
<span class="menu">MOE | Compute</span>.
Examples of running Gaussian
<a href="../apps/qmconfig.htm#RunOutsideMOE">outside of MOE</a> are provided
in the Configure a QM Engine documentation.
</p>

<p>
MOE provides a collection of pseudo-keywords that allow the user to
set up their calculations when the existing menus and options are insufficient:

<table class="noborder">
<tr>
<td>method</td>
<td>Specify the theoretical method to use.  This allows access to methods
that are not contained in the panel menu.  When ONIOM is used,
<tt>method_inner</tt>, <tt>method_middle</tt> and <tt>method_outer</tt> can
be used.
</td></tr>
<tr>
<td>basis</td>
<td>Specify the basis set to use.  This must be a complete basis string such
as <tt>6-31+G**</tt>, and it allows access to basis sets that cannot
be specified with the Basis Set, Polarization and Diffuse menus.
When ONIOM is used, <tt>basis_inner</tt>, <tt>basis_middle</tt> and
<tt>basis_outer</tt> can be used.
</td></tr>
<tr>
<td>fix</td>
<td>This is used to indicate a geometric parameter that should be constrained
during a calculation.  <tt>fix=a-b</tt> constrains the indicated bond length,
<tt>fix=a-b-c</tt> constrains the indicated bond angle and
<tt>fix=a-b-c-d</tt> constrains the indicated torsion angle.  The last is
automatically generated by the Torsion Profile application.  Multiple
fixed parameters are allowed.
</td></tr>
<tr>
<td>embedcharge</td>
<td>By default, the partial charges in the MM region will not be incorporated
into the QM hamiltonian calculation.  This calculation
requires partial charges for the
atoms involved in the QM region(s) for successful results.  When enabled,
the MM region charges will be included in the QM calculation directly.
</td></tr>
<tr>
<td>multiplicity</td>
<td>By default, the multiplicity for the calculation is drawn from the
properties of the input molecule.  When different multiplicities are
desired, they can be specified via this keyword.  Using ONIOM,
<span class="nobr"><tt>multiplicity=(a,b)</tt></span>
specifies the overall and inner-layer multiplicities and
<span class="nobr"><tt>multiplicity=(a,b,c)</tt></span> specifies the overall,
inner- and middle-layer multiplicities.  Care should be taken
to choose values that are allowed for the input molecule.
</td></tr>
<tr>
<td>charge</td>
<td>By default, the overall charges for the calculation are drawn from
the properties of the input molecule.  When different charges are
desired, they can be specified via this keyword.  Using ONIOM,
<span class="nobr"><tt>charge=(a,b)</tt></span>
specifies the overall and inner-layer charges, and
<span class="nobr"><tt>charge=(a,b,c)</tt></span> specifies the overall,
inner- and middle-layer charges.  Care should be taken
to choose values that are allowed for the input molecule.
</td></tr>
</table>

<p>
Gaussian supports three forcefields: AMBER, Dreiding and UFF.  For ONIOM,
MM is performed on the inner layer with the AMBER forcefield, using
parameters from the forcefield in MOE that are passed to Gaussian.
In the GUI, this is
referred to as "MM" rather than "AMBER", to reflect the mix of terms and
parameters.
</p>

<hr noshade="noshade" />

<h2><a id="GAMESS">GAMESS</a></h2>

  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">GAMESS (General Atomic and Molecular
      Electronic Structure System)</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;">The Gordon research group at <a href=
      "https://www.msg.ameslab.gov/GAMESS/GAMESS.htm">Iowa State University</a>
      distributes GAMESS at no cost but with a site license.</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">An <i>ab initio</i> quantum chemistry
      package.</td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>A version of GAMESS must be obtained and installed on an appropriate
  workstation in order to perform calculations using this engine.</p>

<p>In order to execute GAMESS from MOE, the RC variable <tt>gamess.exe</tt>
  must be set. This is the full path to the local executable. For example, if
  the GAMESS executable <tt>gamess.01.x</tt> has been installed in the
  directory <tt>/opt/gamess</tt>:</p>

<pre>
    SetRC ['gamess.exe', '/opt/gamess/gamess.01.x']
</pre>

<p>During execution, the GAMESS application must be instructed as to where to
  find its input, output and temporary storage data. This is done through
  automatically-generated environment variables containing directory paths
  which are constructed based on the value of the <a class="svl" href=
  "../install/install.htm#TMP">TMP</a> environment variable.
If <tt>gamess.exe</tt> is undefined, the
<a href="../appendix/settings.htm#MOEWeb">Default MOE/web Server</a>
will be used for all calculations.  In this case, the account or environment
running MOE/web must be properly configured to run GAMESS.
</p>

<h3>Running with MOE</h3>

<p>The GAMESS QM engine can be run on a molecule in MOE. Load a molecule into
  MOE using:</p>

<p class="blockquote"><span class="menu">MOE | File | <a href=
  "gui/fileopen.htm">Open</a></span></p>

<p>or use the <span class="menu">MOE | RHS | <a href=
  "molsystems/build.htm">Builder</a></span> to build a small molecule.</p>

<p>GAMESS is invoked using:</p>

<p class="blockquote"><span class="menu">MOE | Compute | Simulations |
  <a href="../apps/scf.htm">SCF Calculation</a></span></p>

<p>GAMESS can be used by the <a href=
  "../apps/confsrch.htm"><b>Conformation&nbsp;Search</b></a> and <a href=
  "../apps/emin.htm"><b>Energy&nbsp;Minimize</b></a> applications which can be
  run on a molecule in MOE or on a database. These can be found in the
  <span class="menu">MOE | Compute</span> or <span class="menu">DBV | Compute |
  Molecule</span> menus.  GAMESS can also be used with the
  <a href="../apps/torprofile.htm"><b>Torsion&nbsp;Profile</b></a>
  application, which can be run on a molecule in MOE via
  <span class="menu">MOE | Compute</span>.</p>
  <hr noshade="noshade" />

<h2><a id="ADF">Amsterdam Density Functional</a></h2>

  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">Amsterdam Density Functional (ADF)</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;"><a href="https://www.scm.com">Software
      for Chemistry &amp; Materials</a> distributes ADF as commercial
      software.</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td>An <i>ab initio</i> quantum chemistry package.</td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>ADF must be purchased and installed on an appropriate workstation in order
  to perform calculations using this engine.</p>

<p>In order to execute ADF from MOE, the RC variable <tt>adf.exe</tt> must be
  set. This is the full path to the local executable. For example, if the ADF
  executable <tt>adf</tt> was located in <tt>/opt/adf</tt>:</p>

<pre>
    SetRC ['adf.exe', '/opt/adf/adf']
</pre>

<h3>Running with MOE</h3>

<p>The ADF QM engine can be run on a molecule in MOE. Load a molecule into
  MOE using:</p>

<p class="blockquote"><span class="menu">MOE | File | <a href=
  "gui/fileopen.htm">Open</a></span></p>

<p>or use the <span class="menu">MOE | RHS | <a href=
  "molsystems/build.htm">Builder</a></span> to build a small molecule.</p>

<p>ADF is invoked using:</p>

<p class="blockquote"><span class="menu">MOE | Compute | Simulations |
  <a href="../apps/scf.htm">SCF Calculation</a></span></p>

<p>ADF can also be used by the <a href=
  "../apps/confsrch.htm"><b>Conformation&nbsp;Search</b></a> and <a href=
  "../apps/emin.htm"><b>Energy&nbsp;Minimize</b></a> applications which can be
  run on a molecule in MOE or on a database. These can be found in the
  <span class="menu">MOE | Compute</span> or <span class="menu">DBV | Compute |
  Molecule</span> menus.</p>
  <hr noshade="noshade" />

<h1><a id="Rendering">Rendering and Animation</a></h1>

<h2><a id="PovRay">Pov-Ray Ray Tracer</a></h2>

<p class="blockquote"></p>
  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">POV-Ray (Persistence of Vision
      Raytracer)</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;"><a href=
      "http://www.povray.org">Persistence of Vision Raytracer Pty. Ltd.</a>
      distributes POV-Ray as commercial software.</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">A high-quality 3D graphics rendering
      engine.</td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>POV-Ray must be acquired and installed on an appropriate workstation.
  Version 3.7 or higher is required for full compatibility with MOE.</p>

<p>To use POV-Ray, MOE must be given the location of the POV-Ray executable.
  This can be provided in the <a href="../apps/filesave.htm#RTrace">Ray Tracing
  Settings</a> panel shown in the next section.</p>

<h3>Running with MOE</h3>

<p>To render images of the MOE Window using POV-Ray, open the Save panel from
  either the MOE Window or the Sequence Editor using</p>

<p class="blockquote"><span class="menu">Files | <a href=
  "../apps/filesave.htm">Save</a></span></p>

<p>In the panel, choose</p>

<p class="blockquote"><span class="menu">Save | Picture</span></p>

<p>The bottom part of the panel will change to present options related to
  graphics file formats, for example,</p>

<img src="extprog/save_pic.png" alt="Save Picture" class="center" />

<p>In the <b>Options</b> bank, turning on <b>Render with POV-Ray</b> will
  cause the MOE image to be rendered using POV-Ray, which can then be saved in
  the file format chosen from the <b>Format</b> pulldown menu. One of the
  available formats is <b>POV-Ray Scene File (.pov)</b>, which results in a
  native POV-Ray file being written.</p>

<p>The <b>Render with POV-Ray</b> checkbox becomes available (undimmed) when
  MOE is instructed as to the whereabouts of the POV-Ray executable. This is
  done using the Ray Tracing Settings panel which is opened by pressing
  <b>POV-Ray Settings</b>.</p>

<img src="extprog/rtset.png" alt=
  "Ray Tracing Settings" class="center" />

<p>Enter the full path of the POV-Ray executable, including the name of the
  binary executable file, in the <b>Executable</b> text field.
</p>

<p>
  The <b>Include Path</b> specifies the POV-Ray include directory. For a
  standard POV-Ray installation this can be left empty.
</p>

<p>Other POV-Ray configuration options can be set using this panel as well.
  For more details, please refer to <a href="../apps/filesave.htm#RTrace">Using
  POV-Ray</a>.</p>
  <hr noshade="noshade" />

<h2><a id="Word">Export to Word, PowerPoint</a></h2>

<p class="blockquote"></p>
  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">Microsoft Office Word, Microsoft Office
      PowerPoint</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;"><a href=
      "http://www.microsoft.com">Microsoft Corporation</a></td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">Word processing and presentation
      software.</td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>The software must be purchased and installed on the appropriate
  workstation.</p>

<p>No special configuration is required.</p>

<h3>Running with MOE</h3>

<p>Images of the MOE Window can be exported to presentation software such as
  Word and PowerPoint (on Windows) via the clipboard. In MOE, choose</p>

<p class="blockquote"><span class="menu">MOE | Edit | Copy As | <a href=
  "gui/mainwin.htm#Copy">Picture</a></span></p>

<p>This will open the Copy Picture to Clipboard panel:</p>

<img src="extprog/copy_pic.png" alt=
  "Copy Picture to Clipboard" class="center" />

<p>which provides options for setting image format type, dimension,
  resolution, as well as quality settings.</p>

<p>The image is put on the clipboard where it is directly accessible to
  external programs.</p>
  <hr noshade="noshade" />

<h2><a id="MPlayer">MPlayer, Windows Media Player, Apple
  QuickTime Player</a></h2>

<p class="blockquote"></p>
  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">MPlayer, Windows Media Player,
      QuickTime</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;">MPlayer is distributed under the GNU
      General Public License by the <a href=
      "http://www.mplayerhq.hu">MPlayer</a> team. Windows Media Player is
      commercial software distributed by <a href=
      "http://www.microsoft.com">Microsoft Corporation</a> as part of its
      Microsoft Windows suite. QuickTime is distributed at no cost by <a href=
      "http://www.apple.com">Apple Inc.</a></td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">Movie playing software.</td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>The appropriate software must be obtained and installed on an appropriate
  workstation. The software you are using typically depends on the operating
  system you are running:</p>

<p><b>MPlayer</b>. MPlayer is a movie player for Linux that plays Xvid codec
  format files stored in an Audio-Video Interleave (AVI) container. The Xvid
  video codec must be installed on your computer; it is freely available from
  <a href="http://www.mplayerhq.hu/design7/dload.html">mplayerhq.hu</a>.</p>

<p><b>Windows Media Player</b>. Windows Media Player plays files encoded
  using the Windows Media Video (WMV) codec and stored in an AVI container.</p>

<p><b>QuickTime</b>. QuickTime plays files encoded with the Motion JPEG codec
  and stored in a QuickTime movie container.</p>

<p>To save movies files, MOE uses an intermediary software called MEncoder,
  which is a component of MPlayer. MOE must be instructed as to the location of
  the MEncoder executable as well as a temporary working directory in which
  movie frames may be stored. The configuration is done in the <a href=
  "../apps/moevie.htm#menctest">MOEvie Settings</a> panel shown in the next
  section.</p>

<h3>Running with MOE</h3>

<p>Movies are created in MOE using the MOEvie panel. This can be opened
  using</p>

<p class="blockquote"><span class="menu">MOE | File | New | <a href=
  "../apps/moevie.htm">MOEvie</a></span></p>

<img src="extprog/moevie.png" alt="MOEvie Maker" class="center" />

<p>The desired output file format is selected using the <b>File Encoding</b>
  buttons. To configure MEncoder, press <b>Setup</b>. This will open the MOEvie
  Settings panel:</p>

<img src="extprog/mencoder.png" alt="MOEvie Settings" class="center" />

<p>The full path to the MEncoder program, including the name of the binary
  executable, must be entered at <b>MEncoder Path</b>. This path is saved in the
  MOE resource configuration file, which may be accessed by other machines; it
  is therefore recommended to avoid using absolute pathnames, and rather use
  pathnames derived from an environment variable (e.g. <tt>$MPLAYER</tt>).</p>

<p>Press <b>Test</b> to verify the MEncoder is properly configured.</p>

<p>A working directory is also required for storing movie frames before they
  are assembled into the final movie file. The amount of disk space needed is
  proportional to the number of frames.</p>
  <hr noshade="noshade" />

<h1><a id="2DSketchers">2D Sketchers</a></h1>

<p class="blockquote"></p>
  <table class="noborder">
    <tr>
      <td style="padding: 0 0 0.5em 0; vertical-align: top;">
      <b>Software:</b></td>
      <td style="padding: 0 0 0.5em 0; vertical-align: top;">ISIS/Draw,
      ChemDraw, Biovia (Symyx) Draw, MarvinSketch, JDraw</td>
    </tr>
    <tr>
      <td style="padding: 0 0 0.5em 0; vertical-align: top;">
      <b>Distributor:</b></td>
      <td style="padding: 0 0 0.5em 0; vertical-align: top;">Isis/Draw is
      no-fee software published by MDL Information Systems, now a subsidiary of
      Symyx Technologies which had since merged with Accelrys Inc., more
      recently renamed to Biovia under <a href=
      "http://www.3ds.com/products-services/biovia">
      Dassault Syst&egrave;mes</a>,
      which also distributes Biovia Draw (formerly Symyx Draw) free of cost.
      ChemDraw is distributed commercially by <a href=
      "http://www.cambridgesoft.com">CambridgeSoft Corporation</a>.
      MarvinSketcher is no-fee software published by <a href=
      "https://www.chemaxon.com">ChemAxon Ltd</a>. JDraw is also no-fee for
      academic and non-commercial use.</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">Chemical structure drawing
      programs.</td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>The software must be obtained and installed on an appropriate
  workstation.</p>

<p>The <tt>CLASSPATH</tt> environment variable must be properly set for MOE
  to connect to MarvinSketcher(Java) & JDraw through the <b>Sketch</b> button.
  For details, please see <a href="sketcher.htm">2D Sketcher Programs</a>.</p>

<h3>Running with MOE</h3>

<p>Chemical structures can be imported directly into MOE via the clipboard by
  using</p>

<p class="blockquote"><span class="menu">MOE | Edit | <a href=
  "gui/mainwin.htm#Copy">Paste</a></span></p>

<p>The structures will be created as molecules in the MOE system.</p>

<p>Reactions drawn using 2D sketchers can be imported into MOE by saving them
  as RXN files. MOE's <a href=../apps/shaman.htm>MedChem Transformations</a>
  application can read these files directly. The
  files can also be assembled into a MOE database file and browsed.</p>

<img src="extprog/db_rxn.png" alt=
  "Browse transformations" class="center" />

<p>For details, please see <a href=
  "https://www.chemcomp.com/moe/help/latest/CCG_Tutorials/(Tutorial)_MOE_MedChem_Transformations_In-Cleft.svlx">
  MedChem Transformations Tutorial</a>.</p>
  <hr noshade="noshade" />

<h1><a id="Pipelining">Pipelining</a></h1>

<h2><a id="PPilot">Pipeline Pilot</a></h2>

<p class="blockquote"></p>
  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">Pipeline Pilot</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;"><a href=
      "https://www.3ds.com/products/biovia">Biovia</a>
      distributes Pipeline Pilot commercially.</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">Program to connect software from
      different vendors into a data flow (pipeline).</td>
    </tr>
  </table>

<h3>Setting Up and Running with MOE</h3>

<p>Pipeline Pilot must be purchased and installed on an appropriate
  workstation.</p>

<p>Applications external to Pipeline Pilot can be integrated into Pipeline
  Pilot data flows through Pipeline Pilot's Web Services interface.
  Communication is effected using <a href="http://www.w3.org/TR/wsdl">WSDL</a>
  (Web Services Description Language), an XML format for describing network
  services in which endpoints, network protocol, and message format are
  specified. In this particular case, the network protocol used is <a href=
  "http://www.w3.org/TR/soap">SOAP</a> (Simple Object Access Protocol).</p>

<p>MOE applications can be provided as web services to Pipeline Pilot by
  generating an appropriate WSDL page and then feeding the URL of that page
  into Pipeline Pilot. WSDL pages are generated for MOE applications by
  MOE/web.</p>

<p>For instructions on how to setup MOE/web, please see <a href=
  "../install/web_inst.htm#ServerA">Preparing the Web Server</a>.</p>

<p>The conversion of MOE applications, which are provided as <a href=
  "../tutorials/mpgtut.htm">SVL</a> functions, into the appropriate SOAP/WSDL
  format is performed transparently by MOE/web. To create a web service, all
  that is required is to create a file containing the appropriate function and
  then load the file into MOE/web by invoking MOE/web using the <a class="svl"
  href="../install/web_inst.htm#Configuring">-load</a> command line switch. For
  example</p>

<pre>
    $MOE/bin/moeweb -load soapfunc.svl
</pre>

<p>will load the file <tt>soapfunc.svl</tt> in MOE/web on startup. For an
  example of a web service application, please see <a href=
  "../install/web_inst.htm#SOAPService">Creating a SOAP Web Service</a>.</p>

<p>SVL functions providing web services must obey strict conventions. For
  example, the function name must be prefixed by <tt>soapfcn_</tt>. The
  <a href="../svl/fcnref/soapfcn.htm">SOAP Functions</a> reference page
  describes in detail the requirements that must be satisfied by an SVL
  function in order to be loaded successfully by the MOE/web application
  server.</p>

<p>Note: MOE/web must be running and accessible to Pipeline Pilot at the time
  that the web service is required by Pipeline Pilot.</p>
  <hr noshade="noshade" />

<h2><a id="KNIME">KNIME</a></h2>

<p class="blockquote"></p>
  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">KNIME (Konstanz Information Miner)</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;">KNIME is distributed as an open source
      program under the GNU General Public License by <a href=
      "http://www.knime.org">KNIME AG</a>.</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">Java-based data flow (pipeline) creator
      that supports plugins and wrappers for external code.</td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>KNIME accesses MOE applications in the form of MOE plugins, which once
  installed can be used like normal KNIME nodes. A MOE KNIME node is an SVL
  function that calls special <tt>knime*</tt> SVL functions which will
  communicate with KNIME. These functions are not part of the standard MOE
  distribution but are available in the MOE Extensions for KNIME. Special Java
  wrapper classes are generated at execution time to perform the actual
  communication, which is done entirely via standard I/O pipes (<tt>stdin</tt>,
  <tt>stdout</tt>, and <tt>stderr</tt>). When a MOE node is run, a MOE/batch
  session is started to execute the associated code.</p>

<p>The <i>MOE Extensions for KNIME</i> project serves to integrate KNIME+MOE,
  and consists of the Node Development Kit and Java classes which allow
  specially written MOE SVL programs to be executed from within KNIME. The MOE
  Extensions for KNIME are available in two versions. The standalone version
  contains only pre-built nodes and can be installed using the KNIME Update
  manager. The Node Development Version consists of a jar file (Node
  Development Kit), some Java classes and SVL files, the sources of the
  pre-built nodes, templates for new nodes and documentation. The documentation
  describes system requirements, configuration, and usage.</p>

<p>To obtain the MOE Extensions for KNIME, please contact <a href=
  "http://www.chemcomp.com/Support-Customer_Support.htm">Chemical Computing
  Group</a>.</p>
  <hr noshade="noshade" />

<h2><a id="RelDatabases">Relational Databases</a></h2>

<p class="blockquote"></p>
  <table class="noborder">
    <tr>
      <td style="vertical-align: top;"><b>Software:</b></td>
      <td style="vertical-align: top;">Oracle, Microsoft SQL Server, IBM DB2,
      PostgreSQL, MySQL</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Distributor:</b></td>
      <td style="vertical-align: top;">Oracle is distributed commercially by
      <a href="https://www.oracle.com">Oracle Corporation</a>. Microsoft SQL
      Server is distributed commercially by <a href=
      "https://www.microsoft.com">Microsoft Corporation</a>. IBM DB2 is
      distributed commercially by <a href="https://www.ibm.com">IBM</a>
      (International Business Machines). PostgreSQL is open source software
      available for download from <a href=
      "https://www.postgresql.org">www.postgresql.org</a>. MySQL is also open
      source software, available for download from <a href=
      "https://www.mysql.com">www.mysql.com</a>.</td>
    </tr>
    <tr>
      <td style="vertical-align: top;"><b>Description:</b></td>
      <td style="vertical-align: top;">Relational database / data management
      software.</td>
    </tr>
  </table>

<h3>Setting Up</h3>

<p>The software must be purchased and installed on the appropriate
  workstation.</p>

<p>In order for MOE to communicate with external databases, Java must be
  installed and the appropriate Java-related environment variables set. Please
  see <a href="../install/install.htm#Java">Installing Java</a> for
  details.</p>

<p>MOE uses the Java Database Connectivity (JDBC) protocol for making the
  connection to external databases. A JDBC driver corresponding to the type of
  database you wish to access must be installed. JDBC drivers are not included
  with MOE, however, since JDBC is a common standard, JDBC drivers are
  available for free download from the websites of all the most popular
  database vendors.</p>

<p>Acquire the JDBC driver corresponding to the desired external database
  type and install it on the appropriate workstation. Once the driver has been
  installed, update the <a class="svl" href=
  "../install/install.htm#SVL_JVM">CLASSPATH</a> variable to include: the
  driver installation directory, the <tt>$MOE/java</tt> directory, as well as
  the directory paths of all necessary <tt>jar</tt> files.</p>

<p>Once the driver is installed, use the <a href=
  "../install/moeconfig.htm">Configuration Options</a> panel to define the
  explicit JDBC database connections. This panel can be opened with:</p>

<p class="blockquote"><span class="menu">MOE | Window | Options</span></p>

<p>In the panel, choose the <b>JDBC Database Connections</b> page:</p>

<img src="extprog/jdbc_config.png" alt=
  "Define JDBC Database Connections" class="center" />

<p>Up to four database connections can be defined.</p>

<p>The <b>Alias</b> field is used to specify an arbitrary name which is used
  to refer to given database in the <a href=
  "../appendix/samples.htm#JDBCViewer">JDBC Database Viewer</a> application; if
  the field is left empty, the database URL will be used.</p>

<p>The URL (uniform resource locator) specifies the database to which to
  connect, and must be entered in the <b>URL</b> text field. Note that the
  exact format of the URL is driver-specific and will be described in the
  driver documentation; in all cases, the URL begins with the protocol string
  <tt>jdbc:</tt>.</p>

<p>The JDBC driver class file used to communicate with the database server is
  specified in the <b>Driver</b> field. Please refer to the driver
  documentation for the exact string to enter.</p>

<p>The user account used to connect to the server is specified in the
  <b>Username</b> field, and the password in the <b>Password</b> field.</p>

<p>Press <b>Validate Connection</b> to verify that the connection to the
  database has been made properly.</p>

<h3>Running with MOE</h3>

<p>Data from third party relational database applications can be viewed and
  imported into MOE using the JDBC Database Viewer. This application is opened
  using:</p>

<pre>
    svl&gt; run '$MOE/sample/jdbcview.svl'
</pre>

<p>In this panel, the desired database connection is chosen using the
  <b>Database Alias</b> pulldown menu. To make the actual connection, press
  <b>Connect</b>. The <b>SQL</b> field is used to enter SQL commands for
  specifying which tables to view.</p>

<p>To import the data into a MOE database, press <b>Save as MDB</b>. The
  created database will open automatically into a MOE Database Viewer.</p>
  <!-- START MOE_FOOTER -->
  <div class="MOE_FOOTER">
    <img src="../images/ccgicon.png" /> <a href="../index.htm"></a>
<a href=
    "../legal.htm"></a> &copy;<span class="versionyear"></span> <a href="http://www.chemcomp.com"></a>. All
    rights reserved.<br />
    <a href="mailto:info@chemcomp.com"></a>
  </div><!-- END MOE_FOOTER -->
</div>
</div>
</body>
</html>

