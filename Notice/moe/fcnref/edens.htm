<!DOCTYPE html>
<html>

<!--
!!    MOE On-Line Manuals
!!    COPYRIGHT (C) CHEMICAL COMPUTING GROUP ULC.  ALL RIGHTS RESERVED.
!!-->
<head>
  <meta http-equiv="x-ua-compatible" content="IE=9" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <link rel="stylesheet" type="text/css" href="../../include/manstyle.css" />
  <link rel="icon" type="image/png" href="../../images/ccgicon.png" />
  <link rel="shortcut icon" type="image/png" href="../../images/ccgicon.png" />
  <meta name="keywords" content="keywords:" />
  <meta name="keywords" content="functions: edens_Open" />
  <meta name="keywords" content="functions: edens_Close" />
  <meta name="keywords" content="functions: edens_Read" />
  <meta name="keywords" content="functions: edens_Write" />
  <meta name="keywords" content="functions: edens_Setup" />
  <meta name="keywords" content="functions: edens_ExtractFromSurface" />
  <meta name="keywords" content="functions: edens_Surface" />
  <meta name="keywords" content="functions: edens_Resample" />
  <meta name="keywords" content="functions: edens_ScoreFit" />
  <meta name="keywords" content="functions: edens_PanelAPI" />
  <title>Electron Density Manipulation Functions</title>
</head>
<body>
<div class="center-page">
  <!-- START MOE_HEADER -->
  <div class="MOE_HEADER">
    <a href="../../index.htm"><img src="../../images/ccglogo.png" /></a>
    <a href="../../index.htm"><div class="moeversion"></div></a>
    Electron Density Manipulation Functions
  </div>
<!-- END MOE_HEADER -->
<div class="content">

<h1>Syntax</h1>

<pre>
          ctx = <a class="fcnlink" href="#edens_Open">edens_Open</a> []
                <a class="fcnlink" href="#edens_Close">edens_Close</a> ctx

     'errmsg' = <a class="fcnlink" href=
"#edens_Read">edens_Read</a> [ctx, 'filename', opt]
     'errmsg' = <a class="fcnlink" href=
"#edens_Read">edens_Read</a> [ctx, filenum, opt]
     'errmsg' = <a class="fcnlink" href=
"#edens_Write">edens_Write</a> ['filename', ctx, 'format']
     'errmsg' = <a class="fcnlink" href=
"#edens_Write">edens_Write</a> [filenum, ctx, 'format']

       oldopt = <a class="fcnlink" href="#edens_Setup">edens_Setup</a> [ctx, opt]

         gkey = <a class="fcnlink" href="#edens_Surface">edens_Surface</a> ctx
     'errmsg' = <a class="fcnlink" href=
"#edens_ExtractFromSurface">edens_ExtractFromSurface</a> [ctx, gkey, opt]
     'errmsg' = <a class="fcnlink" href=
"#edens_Resample">edens_Resample</a> [ctx, opt]

    [E, grad] = <a class="fcnlink" href=
"#edens_ScoreFit">edens_ScoreFit</a> [ctx, pos]

         data = <a class="fcnlink" href=
"#edens_PanelAPI">edens_PanelAPI</a> ['action', args]
</pre>

<h1>Description</h1>

<p>The Electron Density Manipulation functions work with a common data
structure containing all the important information related to structure
factors and/or electron density maps required to generate surfaces for viewing
and manipulation.  This is stored as a tagged vector, accessed as a 'context'
variable, and will contain some or all of the following  tags:</p>

<table class="titlebar">
  <tr align="left">
    <th>Tag Name</th>
    <th>Description</th>
  </tr>
  <tr>
    <td>cdata</td>
    <td>Parsed MTZ (structure factors) 'column data' (cdata tag of
return value from <a class="fcnlink" href="edio.htm#mtz_Read">mtz_Read</a>).</td>
    </td>
  </tr>
  <tr>
    <td>[fgrid, fshape]</td>
    <td>Density grid in fractional space; fgrid can be a tagged vector header, in
which case the actual grid is a file on disk (for large grids that cannot load in
RAM all at once), and can be read with
<a class="fcnlink" href="edio.htm#ccp4_fread">ccp4_fread</a>.
    </td>
  </tr>
  <tr>
    <td>[grid, shape]</td>
    <td>Density grid in Cartesian space; if grid is kept on disk this will always
be [].  This is always derived from [fgrid, fshape].
    </td>
  </tr>
  <tr>
    <td>[min, max]</td>
    <td>Minimum and maximum values of fgrid in the full unit cell (even if fshape
is a sub-grid of the unit cell).
    </td>
  </tr>
  <tr>
    <td>[mean, sd]</td>
    <td>Mean and standard deviation of fgrid in the full unit cell.
    </td>
  </tr>
  <tr>
    <td>above5sd</td>
    <td>Fraction of fgrid in the full unit cell which is greater than 5 standard
deviations (used to set initial sigma levels).
    </td>
  </tr>
  <tr>
    <td>spacegroup</td>
    <td>Canonical international short name for the space group.
    </td>
  </tr>
  <tr>
    <td>cell</td>
    <td>Cell dimensions â€“ [a, b, c, &alpha;, &beta;, &gamma;] in
units of angstroms and degrees.
    </td>
  </tr>
  <tr>
    <td>resolution</td>
    <td>[low, high] resolution range of the structure factor
data used to derive the density, in angstroms (default low = 100&Aring;,
high = 2&Aring;).  -1 indicates that the corresponding value is unknown.
    </td>
  </tr>
  <tr>
    <td>skew</td>
    <td>4x4 rotation and translation matrix to transform the grid
back to crystal frame of reference.  Note the 4th row must always be
[0, 0, 0, 1].
    </td>
  </tr>
  <tr>
    <td>title</td>
    <td>A title for the density.
    </td>
  </tr>
  <tr>
    <td>columns</td>
    <td>MTZ column name(s) to use to compute the density
[F<sub>o</sub>, Phi<sub>o</sub>, F<sub>c</sub>].
    </td>
  </tr>
  <tr>
    <td>dif_coeff</td>
    <td>[2, 1] for a 2F<sub>o</sub>-F<sub>c</sub> map, [1, 1]
for a F<sub>o</sub>-F<sub>c</sub> map, or [1, 0] for a straight F<sub>o</sub>
map or one using refined columns.
    </td>
  </tr>
  <tr>
    <td>[rec, site, site_extent]</td>
    <td>Selection expressions for the receptor
and active site definitions for Surfaces and Maps, as well as the extent to
include from the active site, in angstroms.  The density will be trimmed
to the given extent around the active site and ignore atoms not in the
receptor set.
    </td>
  </tr>
  <tr>
    <td>[rec_atoms, site_atoms]</td>
    <td>Complete set of atoms in the system to be
considered for simulated density calculation, as well as measuring correlation
(fit of atoms to density), and so on.  Note that Alternates, B factors, and
anisotropic B factors, if known, should be loaded into the system and included
here or else results will be incorrect.
    </td>
  </tr>
  <tr>
    <td>spacing</td>
    <td>Requested minimum grid spacing to use, in angstroms, when
generating  or transforming a grid.
    </td>
  </tr>
  <tr>
    <td>sigma</td>
    <td>Requested default contour level (by default, chosen based
on EM, above5sd and dif_coeff).
    </td>
  </tr>
  <tr>
    <td>[color, material]</td>
    <td>Vectors of color(s) and material(s) to be used
when rendering the isosurface(s) (default is blue for regular maps and green
(+) and pink (-) for difference maps).
    </td>
  </tr>
  <tr>
    <td>sourcefile</td>
    <td>Filename including full path of the original MTZ or grid file.
    </td>
  </tr>
  <tr>
    <td>EM</td>
    <td>Flag, If non-zero indicates an Electron Microscopy grid.  EM
grids are non-periodic but a cell which encloses the grid is still used for
convenience so the other functions may be used unchanged.
    </td>
  </tr>
  <tr>
    <td>[ed, Fmag]</td>
    <td>Special cache for data needed by the
<a class="fcnlink" href="#edens_ScoreFit">edens_ScoreFit</a> function.
    </td>
  </tr>
  <tr>
    <td>edstate</td>
    <td>The state of the context when ed was set, to
allow for invalidation.
    </td>
  </tr>
  <tr>
    <td>state</td>
    <td>A positive integer which strictly increases any time any
change whatsoever is made to a context variable that might affect calculation
of structure factors or electron density such as cell parameters, resolution,
rec_atoms, site_atoms, etc.
    </td>
  </tr>
</table>

<p>At least one of <tt>cdata</tt> or <tt>[fgrid, fshape]</tt> should be
non-null, the remaining fields are optional.  It is also important that
<tt>cell</tt>, <tt>spacegroup</tt> and <tt>resolution</tt> be set correctly
however, or most functions will not work correctly.</p>

<a id="edens_Open"></a>
<hr noshade="noshade" />

<pre>
ctx = <span class="fcndef">edens_Open</span> []
</pre>

<p>Initializes a new context tagged vector as described above for working
with densities, or returns [] on error.</p>

<p><i>Example</i>:</p>

<pre>
    // Create a new context.

    local ctx = edens_Open [];
</pre>

<a id="edens_Close"></a>
<hr noshade="noshade" />

<pre>
<span class="fcndef">edens_Close</span> ctx
</pre>

<p>Close a density context and clean up any associated resources.  Any
surfaces that may have been created are left intact and must be destroyed
separately.</p>

<p><i>Example</i>:</p>

<pre>
    // Create a new context, read file, and close it.

    local ctx = edens_Open [];
    edens_Read [ctx, '1fin.ccp4'];
    edens_Close ctx;
</pre>

<a id="edens_Read"></a>
<hr noshade="noshade" />

<pre>
'errmsg' = <span class="fcndef">edens_Read</span> [ctx, 'filename', opt]
'errmsg' = <span class="fcndef">edens_Read</span> [ctx, filenum, opt]
</pre>

<p>Reads a structure factor or grid file into the given context, <tt>ctx</tt>.
<tt>filename</tt> or <tt>filenum</tt> is the filename or file handle,
respectively, of the file to be read in from disk.  Supported formats are:
MTZ, CIF, CV, HKL for structure factors, or MAP, CCP4, MRC, CNS, DSN6,
MOE-GRID for grids, and the format will be automatically detected.
Note that <tt>rec_atoms</tt> and <tt>site_atoms</tt> will be copied from the
MOE system.</p>

<p><tt>opt</tt> allows setting optional parameters for the returned context.
Tags correspond to those in the context and may be one or more of:
<tt>rec_atoms</tt>,
<tt>site_atoms</tt>,
<tt>color</tt>,
<tt>columns</tt>,
<tt>dif_coeff</tt>,
<tt>title</tt>,
<tt>sigma</tt>,
<tt>spacing</tt>,
<tt>material</tt>,
<tt>rec</tt>,
<tt>site</tt>,
<tt>site_extent</tt>.
Additionally, for grid files there are
some special opt tags:</p>

<ul>
<li><tt>ondisk</tt>: if non-zero, will force a grid file to be kept on disk
and not read into RAM.</li>
<li><tt>normalize</tt>: if non-zero, will normalize a grid file to mean
0, standard deviation 1 after reading.</li>
<li><tt>maptype</tt>: for a grid file, type of map being loaded: -1 = unknown;
0 = regular map; 1 = difference map (e.g. mF<sub>o</sub>-DF<sub>c</sub>);
2 = EM (default -1).</li>
</ul>

<p>Empty token ('') is returned on success, otherwise an error message token
is returned.</p>

<p><i>Example</i>:</p>

<pre>
    // Read CCP4 file from disk.

    local ctx = edens_Open [];
    edens_Read [ctx, '1fin.ccp4', [title: '1FIN map', sigma: 1]];
    edens_Close ctx;
</pre>

<a id="edens_Write"></a>
<hr noshade="noshade" />

<pre>
'errmsg' = <span class="fcndef">edens_Write</span> ['filename', ctx, 'format']
'errmsg' = <span class="fcndef">edens_Write</span> [filenum, ctx, 'format']
</pre>

<p>Writes a density or structure factors to disk.  <tt>filename</tt> or
<tt>filenum</tt> is the filename or file handle, respectively, of the file to
be written.  <tt>ctx</tt> is the context tagged vector containing the data
to be written to disk.  Only sections related to the selected file format will
be written.  <tt>format</tt> specifies the file format to write out.  It must
be one of: 'mtz', 'cif', 'cv' for structure factors, or 'ccp4', 'mrc', 'cns',
'dsn6', 'grid', 'cube' for grids.</p>

<p>Empty token ('') is returned on success, otherwise an error message token
is returned.</p>

<p><i>Example</i>:</p>

<pre>
    // Convert CCP4 file to DSN6 format.

    local ctx = edens_Open [];
    edens_Read [ctx, '1fin.ccp4', [title: '1FIN map', sigma: 1]];
    edens_Write ['1fin.ccp4', ctx, 'dsn6'];
    edens_Close ctx;
</pre>

<a id="edens_Setup"></a>
<hr noshade="noshade" />

<pre>
oldopt = <span class="fcndef">edens_Setup</span> [ctx, opt]
</pre>

<p>Settings for surface creation.  <tt>ctx</tt> is the density
context to modify or view settings for, while <tt>opt</tt> is a tagged vector
of settings to change.  Valid settings that can be changed by this function
include:
<tt>rec_atoms</tt>,
<tt>site_atoms</tt>,
<tt>color</tt>,
<tt>columns</tt>,
<tt>dif_coeff</tt>,
<tt>title</tt>,
<tt>sigma</tt>,
<tt>spacing</tt>,
<tt>material</tt>,
<tt>rec</tt>,
<tt>site</tt>,
<tt>site_extent</tt>.
Any others will be ignored.
opt may also be [] to simply retrieve the current settings without making any
changes.</p>


<p>The function returns a tagged vector of the current settings for the
context for
<tt>rec_atoms</tt>,
<tt>site_atoms</tt>,
<tt>color</tt>,
<tt>columns</tt>,
<tt>dif_coeff</tt>,
<tt>title</tt>,
<tt>sigma</tt>,
<tt>spacing</tt>,
<tt>material</tt>,
<tt>rec</tt>,
<tt>site</tt>,
<tt>site_extent</tt>.
</p>

<p><i>Example</i>:</p>

<pre>
    // Load and change surface to yellow.

    local ctx = edens_Open [];
    edens_Read [ctx, '1fin.ccp4', [title: '1FIN map', sigma: 1]];
    oldconf = edens_Setup [ctx, [color: icolor 'yellow']];
    edens_Close ctx;
</pre>

<a id="edens_Surface"></a>
<hr noshade="noshade" />

<pre>
gkey = <span class="fcndef">edens_Surface</span> ctx
</pre>

<p>Creates and returns a <a href="../../apps/surfmap.htm">Surfaces and
Maps</a> compatible graphics object <tt>gkey</tt> for the surface
described in the given context <tt>ctx</tt>.  The returned <tt>gkey</tt>
will include a Gvar with as much detail as possible from the provided
context.  The surface will always be of type Electron Density
(<tt>S_EDENSITY</tt>).  The grid will be calculated from structure
factors in <tt>cdata</tt> if necessary, and using <tt>dif_coeff</tt> and
<tt>columns</tt>.  <tt>[]</tt> will be returned if the grid is
legitimately null (e.g. was resampled to an area completely without
density).</p>

<p><i>Example</i>:</p>

<pre>
    // Create Surfaces and Maps surface from file on disk.

    local ctx = edens_Open [];
    edens_Read [ctx, '1fin.ccp4', [title: '1FIN map', sigma: 1]];
    local gkey = edens_Surface ctx;
    edens_Close ctx;
</pre>

<a id="edens_ExtractFromSurface"></a>
<hr noshade="noshade" />

<pre>
'errmsg' = <span class="fcndef">edens_ExtractFromSurface</span> [ctx, gkey, opt]
</pre>

<p><tt>edens_ExtractFromSurface</tt> extracts the relevant information from
the given <a href="../../apps/surfmap.htm">Surfaces and Maps</a> graphics key
<tt>gkey</tt> and fills in the given context <tt>ctx</tt> accordingly.
<tt>gkey</tt> may be an integer graphics key of the surface, or a surface
title token (if title is not unique, choice will be arbitrary).  <tt>opt</tt>
can be one or more of:</p>

<ul>
<li><tt>which</tt>: an integer indicating which grid to extract from gkey
(1-3 for Electron Density grids, 1-5 for External Grids).  Normally this
can be left at the default of 1.</li>

<li><tt>cell</tt>: <tt>CellParameters []</tt> setting.  It will be taken from
the system if not given, or the <tt>gkey</tt> if it contains a cell setting.
</li>
</ul>

<p>An empty token ('') is returned on success, or else an error message token
is returned.  Note that not all Electron Density surfaces include structure
factors and/or the full grid, so in these cases nothing will be extracted
and [] will be returned for the context.</p>

<p><i>Example</i>:</p>

<pre>
    // Read density from first graphics object in the system.

    local ctx = edens_Open [];
    edens_ExtractFromSurface [ctx, first GkeyList [], []];
    edens_Close ctx;
</pre>

<a id="edens_Resample"></a>
<hr noshade="noshade" />

<pre>
'errmsg' = <span class="fcndef">edens_Resample</span> [ctx, opt]
</pre>

<p><tt>edens_Resample</tt> is used to trim the density to a specified region
of space, possibly along with performing a rotation and/or translation, and
resampling the grid to achieve optimal grid spacing for the size of the region
of interest.  A fractional grid will be computed from the structure factors if
necessary, using <tt>cdata</tt>, <tt>dif_coeff</tt>, and <tt>columns</tt>.
<tt>ctx</tt> is the context containing the density grid to be modified.
<tt>opt</tt> may contain <b>one</b> of the following defining the region
to trim:</p>

<ul>
<li><tt>selection: ['selection expression', radius]</tt> with <tt>radius</tt>
in angstroms</li>
<li><tt>ball: [centerxyz, radius]</tt> with <tt>radius</tt> in
angstroms</li>
<li><tt>box: [corner1xyz, corner2xyz]</tt> with corner1 x,y,z &lt;=
corner2 x,y,z</li>
</ul>

<p>and optionally:</p>

<ul>
<li><tt>R, T</tt>: 3x3 rotation matrix and 3x1 translation vector,
respectively, to bring back to the crystal frame of reference (view matrix).
These will result in rotation of the grid during resampling such that
p = Rp'+T, where p are the coordinates before rotation and p' the resulting
coordinates.</li>
</ul>

<p>A bounding box will be calculated for the specified region, if any is
given, and the grid will be resampled within the bounding box.  The
<tt>spacing</tt> parameter of the context will be taken as the requested grid
spacing though the final chosen spacing may be larger or smaller.
Note: although this function generally zeroes out portions of the grid,
<tt>min</tt>, <tt>max</tt>, <tt>mean</tt> and <tt>sd</tt> are NOT recomputed
as these represent the values corresponding to the full asymmetric unit and
not the current region described by the grid.  This function modifies
<tt>grid</tt> and <tt>shape</tt>, but <tt>fgrid</tt> and <tt>fshape</tt> are
left untouched.  Transformations in <tt>R</tt> and <tt>T</tt> are applied
starting from the fractional space grid, possibly with <tt>skew</tt> matrix
applied.</p>

<p>An empty token ('') is returned on success, or else an error message token
is returned.</p>

<p><i>Example</i>:</p>

<pre>
    // Create Surfaces and Maps surface from file on disk resampled
    // around ligand.

    local ctx = edens_Open [];
    edens_Read [ctx, '1fin.ccp4', [title: '1FIN map', sigma: 1]];
    edens_Resample [ctx, [selection: ['ligand', 6.0]]];
    local gkey = edens_Surface ctx;
    edens_Close ctx;
</pre>

<a id="edens_ScoreFit"></a>
<hr noshade="noshade" />

<pre>
[E, grad] = <span class="fcndef">edens_ScoreFit</span> [ctx, pos]
</pre>

<p>Performs a convolution in Fourier space between the experimental density in
<tt>ctx</tt>, and density simulated from the <tt>rec_atoms</tt> and
<tt>site_atoms</tt> of the context.  This gives a value for energy throughout
the entire grid, which can then be sampled using this function.  It returns
a scalar total energy <tt>E</tt> and vector of gradients <tt>grad</tt> at each
position in space given in <tt>pos</tt>.  This energy gives a measure of the
correlation between the actual and simulated electron density at the given 
point(s), i.e. how well the atoms fit in to the density.  This can then be
used along with the gradient to, for example, minimize a structure into its
electron density map.</p>

<p><i>Example</i>:</p>

<pre>
    // Score fit of PDB coordinates to density.

    Close [force: 1];
    data = fread_PDB '1fin.pdb';
    mol_Create data.mol;
    local a = Atoms [];

    local ctx = edens_Open [];
    edens_Read [ctx, '1fin.ccp4', [title: '1FIN map', atoms: a]];
    local [E, grad] = edens_ScoreFit [ctx, aPos a];
    edens_Close ctx;
</pre>

<a id="edens_PanelAPI"></a>
<hr noshade="noshade" />

<pre>
data = <span class="fcndef">edens_PanelAPI</span> [action, args]
</pre>

<p>Provides an interface for inserting the electron density subpanel into
another existing panel.  Includes widgets for surface color and material,
render type, sigma level slider, map type and columns, unit cell and
resolution.
</p>

<p><tt>action</tt> must be one of the following:</p>

<ul>
<li><tt>'widgets'</tt>. The function will return
<tt>[widgets, default_values]</tt>, where the widgets are
to be incorporated into the parent panel and initialized to the
default values (using <a class="fcnlink"
href="../../svl/svlgui/fcnref/wt_data.htm#WindowSetData">WindowSetData</a>)
once the parent panel has been created.  <tt>args</tt> is ignored.
</li>

<li><tt>'monitor'</tt>. The function performs the monitoring
operations of the electron density subpanel, and should be called
in the monitor routine of the parent panel.
<tt>args</tt> is the <a class="fcnlink"
href="../../svl/svlgui/fcnref/wt_data.htm#WindowValues">WindowValues</a>
of the parent panel, and the return value is <tt>[wdata, wattr]</tt>,
which are to be applied to the parent panel (using
<a class="fcnlink"
href="../../svl/svlgui/fcnref/wt_data.htm#WindowSetData">WindowSetData</a>
and
<a class="fcnlink"
href="../../svl/svlgui/fcnref/wt_attr.htm">WindowSetAttr</a>,
respectively).</li>

<li><tt>'trigger'</tt>.  The function intercepts and handles the triggers
destined for the electron density subpanel, and should be called from the
parent panel event
(<a class="fcnlink"
href="../../svl/svlgui/fcnref/wt_wait.htm">WindowWait</a>)
loop.  Here,
<tt>args = [wkey, val, trig]</tt>, where
<ul>
  <li><tt>wkey</tt> is the window key of the parent panel;
  </li>
  <li><tt>val</tt> and <tt>trig</tt> are the return values of the most
    recent call to <a class="fcnlink"
    href="../../svl/svlgui/fcnref/wt_wait.htm">WindowWait</a>
    in the parent panel event loop.
  </li>
</ul>
The function returns a list of task id's
from any tasks created (e.g. associated with the electron density file browse
panel), which must be
<a
class="fcnlink" href="../../svl/fcnref/taskfcn.htm#task_kill">task_kill</a>'ed
by the caller when the parent panel is shut down.</li>

<li><tt>'validate'</tt>. The function
verifies whether all settings in the electron density subpanel are
valid and usable.
<tt>args</tt> is the <a class="fcnlink"
href="../../svl/svlgui/fcnref/wt_data.htm#WindowValues">WindowValues</a>
of the parent panel.  The function returns
an empty token on success, otherwise an error message.
</li>
</ul>

<p>The sample file <tt>$MOE/sample/edenstext.svl</tt> provides an example
of usage.
</p>

<h1>See Also</h1>

<p><a href="ed.htm">Electron Density Functions</a></p>
<p><a href="edio.htm">Electron Density I/O Functions</a></p>

  <div class="MOE_FOOTER">
    <img src="../../images/ccgicon.png" /> <a href="../../index.htm"></a>
    <a href="../../legal.htm"></a> &copy;<span class="versionyear"></span>
    <a href="http://www.chemcomp.com"></a>. All rights reserved.<br />
    <a href="mailto:info@chemcomp.com"></a>
  </div><!-- END MOE_FOOTER -->
</div>
</div>
</body>
</html>

