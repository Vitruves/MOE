<!DOCTYPE html>
<html>

<!--
!!    MOE On-Line Manuals
!!    COPYRIGHT (C) CHEMICAL COMPUTING GROUP ULC.  ALL RIGHTS RESERVED.
!!-->
<head>
  <meta http-equiv="x-ua-compatible" content="IE=9" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <link rel="stylesheet" type="text/css" href="../../include/manstyle.css" />
  <link rel="icon" type="image/png" href="../../images/ccgicon.png" />
  <link rel="shortcut icon" type="image/png" href="../../images/ccgicon.png" />
  <title>Menu File Format</title>
  <meta name="keywords" content="keywords: MENU, APPEND, PREPEND" />
  <meta name="keywords" content="keywords: INSERT_BEFORE, INSERT_AFTER" />
  <meta name="keywords" content="keywords: PAGE, REPLACE_ITEM, DELETE_ITEM" />
  <meta name="keywords" content="functions: ReadMenuFile" />
  <meta name="keywords" content="functions: EchoMenuCommands" />
</head>
<body>
<div class="center-page">
  <!-- START MOE_HEADER -->
  <div class="MOE_HEADER">
    <a href="../../index.htm"><img src="../../images/ccglogo.png" /></a>
    <a href="../../index.htm"><div class="moeversion"></div></a>
    Menu File Format
  </div>
<!-- END MOE_HEADER -->
<div class="content">

<h1>Syntax</h1>

<pre>
    <a class="fcnlink" href="#ReadMenuFile">ReadMenuFile</a> 'filename'
    <a class="fcnlink" href="#ReadMenuFile">ReadMenuFile</a> "menu-string"

    new_value  = <a class="fcnlink" href=
"#EchoMenuCommands">EchoMenuCommands</a> old_value
    curr_value = <a class="fcnlink" href=
"#EchoMenuCommands">EchoMenuCommands</a> []
</pre>

<div class="indent">
  <table class="noborder left">
      <tr>
        <td><i>file</i></td>
        <td>: <b>{</b> <i>menu</i> | <b><tt>include</tt></b> <i>string</i>
        <b>}*</b></td>
      </tr>
      <tr>
        <td><i>menu</i></td>
        <td>: <b><tt>MENU</tt></b> <b>{</b> <i>modifier</i> <b>}</b>
        <i>string</i> <b>{</b> <i>menu-item</i> <b>}*</b>
        <b><tt>ENDMENU</tt></b></td>
      </tr>
      <tr>
        <td><i>modifier</i></td>
        <td>: <b><tt>APPEND</tt></b><br />
        : <b><tt>PREPEND</tt></b><br />
        : <b><tt>REPLACE</tt></b><br />
        : <b><tt>REPLACE_ITEM</tt></b><br />
        : <b><tt>DELETE_ITEM</tt></b><br />
        : <b><tt>INSERT_BEFORE</tt></b> <i>string</i><br />
        : <b><tt>INSERT_AFTER</tt></b> <i>string</i><br />
        : <b><tt>PAGER</tt></b>
        </td>
      </tr>
      <tr>
        <td valign="top"><i>menu-item</i></td>
        <td valign="top">: <b><tt>SEPARATOR</tt></b><br />
        : <i>string</i> <b><tt>submenu</tt></b> <i>string</i><br />
        : <i>string</i> <b><tt>MENU</tt></b> <i>string</i> <b>{</b>
        <i>menu-item</i> <b>}*</b> <b><tt>ENDMENU</tt></b><br />
        : <i>string</i> <b>{</b> <i>command</i> <b>}*</b></td>
      </tr>
      <tr>
        <td valign="top"><i>command</i></td>
        <td valign="top">: <b><tt>title</tt></b><br />
        : <b><tt>exec</tt></b> <i>string</i> <b>{</b> <b><tt>&amp;</tt></b>
        <i>string</i> <b>}*</b><br />
        : <b><tt>replace_item_title</tt></b> <i>string</i><br />
        : <b><tt>help</tt></b> <i>string</i><br />
        : <b><tt>accel</tt></b> <i>string</i><br />
        : <b><tt>bgcolor</tt></b> <i>string</i><br />
        : <b><tt>fgcolor</tt></b> <i>string</i><br />
        : <b><tt>active</tt></b> <i>expression</i><br />
        : <b><tt>inactive</tt></b> <i>expr</i><br />
        : <b>{<tt>radio</tt>} <tt>value</tt></b> <i>expr</i><br />
        : <b><tt>columns</tt></b> <i>number</i><br />
      </td>
      </tr>
      <tr>
        <td valign="top"><i>expr</i></td>
        <td valign="top">: <i>expr</i> <b><tt>&</tt></b> <i>expr</i><br />
        : <i>expr</i> <b><tt>|</tt></b> <i>expr</i><br />
        : <b><tt>!</tt></b> <i>expr</i><br />
        : <b><tt>(</tt></b> <i>expr</i> <b><tt>)</tt></b><br />
        : <b><tt>TRUE</tt></b><br />
        : <b><tt>FALSE</tt></b><br />
        : <b><tt>data | data_modified | ... | sel_atom ...</tt></b><br />
        </td>
      </tr>
      <tr>
        <td><i>string</i></td>
        <td>: <tt>&quot;character data&quot; | 'character
        data'</tt></td>
      </tr>
      <tr>
        <td><i>comment</i></td>
        <td>: <b>#</b> comment to end of line</td>
      </tr>
    </table>
</div>

<h1>Description</h1>

<p>Menus, popups and button bars in MOE are configured using menu files. On
  startup, MOE first reads all menu files located in <tt>$MOE/menu/</tt>,
  followed by any custom menu files in <tt>$MOE/custom/menu/</tt>, then by
  profile menus (if in use), <tt>$MOE/profile/<i>profilename</i>/menu/</tt> and
  finally any user menu files, in <tt>$HOME/moefiles/menu/</tt>.</p>

<p>Each menu file consists of a sequence of menu specifications. Each menu is
  given a name so that other menus (and MOE) can reference it. If a new menu
  specification has the same name as a previous specification, the new menu
  will override the old one. Thus, user menu definitions override the master
  definitions on a menu-by-menu basis; i.e. to redefine a particular menu, only
  that menu need be specified in the user menu file. To customize menus and
  buttons in MOE, a menu file must be created. To load a menu file in an
  already-running MOE, load the file using the <tt>ReadMenuFile</tt>
  function.</p>

<p>A menu file is an ASCII file with a specific syntax that can be created
  and edited with any ASCII text editor. Comments are introduced with the
  <tt>#</tt> character and extend to the end of the line. Blank lines are
  ignored.</p>

<p>Each menu specification begins with the <tt>MENU</tt> keyword and follows
  the syntax:</p>
  <p class="blockquote">
    <b><tt>MENU</tt></b> <b>{</b> <i>modifier</i> <b>}</b>
    <i>string</i> <b>{</b> <i>menu-item</i> <b>}*</b> <b><tt>ENDMENU</tt></b>
  </p>

<p>The <i>modifier</i> after the <tt>MENU</tt> keyword is optional and used
  to modify existing menu structures. If absent, an empty menu with the name
  by the quoted <i>string</i> is created (deleting any previous definition).
  The following modifiers are available:

  <center>
    <table class="titlebar">
      <tr>
        <th><tt>MENU</tt> <i>modifier</i></th>
        <th>Description</th>
      </tr>
      <tr>
        <td><b><tt>APPEND</tt></b></td>
        <td>Append menu items to an existing menu of the specified name.
          If the menu does not exist, it is created. If the appended menu
          contain menu items already existing in the menu being added to,
          the original menu items are deleted and are superseded
          by the appended items.
        </td>
      </tr>
      <tr>
        <td><b><tt>PREPEND</tt></b></td>
        <td>Prepend menu items to an existing menu of the specified name.
          If the menu does not exist, it is created. If the prepended menu
          contain menu items already existing in the menu being added to,
          the original menu items are deleted and are superseded
          by the prepended items.
        </td>
      </tr>
      <tr>
        <td><b><tt>REPLACE</tt></b></td>
        <td>Replace existing menu of the same name. If the menu
          does not exist, it is created.
        </td>
      </tr>
      <tr>
        <td><b><tt>REPLACE_ITEM</tt></b></td>
        <td>Replace items of the same name in the specified menu.
          The first occurrence of the item name will be replaced.
          If an item is not present in the menu to be changed, it
          is appended. If the menu does not exist, it is created.
        </td>
      </tr>
      <tr>
        <td><b><tt>DELETE_ITEM</tt></b></td>
        <td>Delete items from the specified menu. The first
          occurrence of the item name will be deleted.
        </td>
      </tr>
      <tr>
        <td><b><tt>INSERT_BEFORE</tt></b> <i>string</i></td>
        <td>Insert items above the menu item <i>string</i> in the
          specified menu. If the menu does not exist, it is created.
          If the menu item <i>string</i> does not exist, the
          new items are appended to the menu.
        </td>
      </tr>
      <tr>
        <td><b><tt>INSERT_AFTER</tt></b> <i>string</i></td>
        <td>Insert items after the menu item <i>string</i> in the
          specified menu. If the menu does not exist, it is created.
          If the menu item <i>string</i> does not exist, the
          new items are prepended to the menu.
        </td>
      </tr>
      <tr>
        <td><b><tt>PAGER</tt></b></td>
        <td>Create a paged button bar menu.
           Only submenu items are allowed on the first menu level;
           each submenu represents a page. The pages are switched via
           an option menu with all submenu titles. If only one submenu
           is present the option menu is not shown.
        </td>
      </tr>
    </table>
  </center>

<p>Menus can appear as menu bars, button bars or popup menus. The
  <tt>PAGER</tt> keyword denotes a button bar menu type in which each submenu
  is a separate page and an option menu is used to select between pages.</p>

<p>In general, any string can be used to name a menu. Menu names are used to
  refer to the menus (e.g. in <tt>submenu</tt> constructs). Certain menu names
  have special meaning in MOE:</p>
  <center>
    <table class="titlebar">
      <tr>
        <th>Name</th>
        <th>Meaning</th>
        <th>Standard Definition</th>
      </tr>
      <tr>
        <td><tt>dbvMenuBar</tt></td>
        <td>The Database Viewer menu bar.</td>
        <td><tt>$MOE/menu/menu-dbv</tt></td>
      </tr>
      <tr>
        <td><tt>dbvCellPopupMenu</tt></td>
        <td>The Database Viewer non-molecule field popup menu.</td>
        <td><tt>$MOE/menu/menu-dbv</tt></td>
      </tr>
      <tr>
        <td><tt>dbvEntryPopupMenu</tt></td>
        <td>The Database Viewer entry number popup menu.</td>
        <td><tt>$MOE/menu/menu-dbv</tt></td>
      </tr>
      <tr>
        <td><tt>dbvFieldPopupMenu</tt></td>
        <td>The Database Viewer field title popup menu.</td>
        <td><tt>$MOE/menu/menu-dbv</tt></td>
      </tr>
      <tr>
        <td><tt>dbvMoeCellPopupMenu</tt></td>
        <td>The Database Viewer moe field popup menu.</td>
        <td><tt>$MOE/menu/menu-dbv</tt></td>
      </tr>
      <tr>
        <td><tt>dbvMolCellPopupMenu</tt></td>
        <td>The Database Viewer molecule field popup menu.</td>
        <td><tt>$MOE/menu/menu-dbv</tt></td>
      </tr>
      <tr>
        <td><tt>dbvPlotPopupMenu</tt></td>
        <td>The Database Viewer plot area popup menu.</td>
        <td><tt>$MOE/menu/menu-dbv</tt></td>
      </tr>
      <tr>
        <td><tt>dbvYAxisPopupMenu</tt></td>
        <td>The Database Viewer plot area y-axis popup menu.</td>
        <td><tt>$MOE/menu/menu-dbv</tt></td>
      </tr>
      <tr>
        <td><tt>Main</tt></td>
        <td>The MOE main window menu bar.</td>
        <td><tt>$MOE/menu/moe-menus</tt></td>
      </tr>
      <tr>
        <td><tt>MOE:Popup</tt></td>
        <td>The MOE main window popup menu.</td>
        <td><tt>$MOE/menu/moe-menus</tt></td>
      </tr>
      <tr>
        <td><tt>SEChainPopupMenu</tt></td>
        <td>The Sequence Editor chain box popup menu.</td>
        <td><tt>$MOE/menu/menu-se</tt></td>
      </tr>
      <tr>
        <td><tt>SEColumnPopupMenu</tt></td>
        <td>The Sequence Editor residue column popup menu.</td>
        <td><tt>$MOE/menu/menu-se</tt></td>
      </tr>
      <tr>
        <td><tt>SEMenuBar</tt></td>
        <td>The Sequence Editor menu bar.</td>
        <td><tt>$MOE/menu/menu-se</tt></td>
      </tr>
      <tr>
        <td><tt>SEPopupMenu</tt></td>
        <td>The Sequence Editor popup menu.</td>
        <td><tt>$MOE/menu/menu-se</tt></td>
      </tr>
      <tr>
        <td><tt>SEResiduePopupMenu</tt></td>
        <td>The Sequence Editor residue box popup menu.</td>
        <td><tt>$MOE/menu/menu-se</tt></td>
      </tr>
      <tr>
        <td><tt>SETagPopupMenu</tt></td>
        <td>The Sequence Editor tag box popup menu.</td>
        <td><tt>$MOE/menu/menu-se</tt></td>
      </tr>
      <tr>
        <td><tt>SVLTextEditor</tt></td>
        <td>The Text Editor menu bar.</td>
        <td><tt>$MOE/menu/menu-ted</tt></td>
      </tr>
      <tr>
        <td><tt>SVLTextEditorPopup</tt></td>
        <td>The Text Editor popup menu.</td>
        <td><tt>$MOE/menu/menu-ted</tt></td>
      </tr>
      <tr>
        <td><tt>SystemManager:Popup</tt></td>
        <td>The System Manager popup menu.</td>
        <td><tt>$MOE/menu/moe-menus</tt></td>
      </tr>
    </table>
  </center>


<p>Menu items appear in the menu specification prior to the <tt>ENDMENU</tt>.
  Each <i>menu-item</i> has the following syntax:</p>
  <table class="noborder">
      <tr>
        <td valign="top"><i>menu-item</i></td>
        <td>: <b><tt>SEPARATOR</tt></b><br />
        : <i>string</i> <b><tt>submenu</tt></b> <i>string</i><br />
        : <i>string</i> <b><tt>MENU</tt></b> <i>string</i> <b>{</b>
        <i>menu-item</i> <b>}*</b> <b><tt>ENDMENU</tt></b><br />
        : <i>string</i> <b>{</b> <i>command</i> <b>}*</b></td>
      </tr>
    </table>

<p>A <tt>SEPARATOR</tt> item appears as a bar (horizontal or vertical) that
  is used to separate sections of a menu (for readability). The
  <tt>submenu</tt> construct is used to create a pull-right or pull-down
  submenu entitled by the <i>string</i> prior to the <tt>submenu</tt> keyword;
  the contents of the submenu are those of the menu specified by the
  <i>string</i> following the <tt>submenu</tt> keyword. Alternatively, a
  submenu can be specified by an explicit inline <tt>MENU</tt> ...
  <tt>ENDMENU</tt> construct. For example, the MOE main menu is specified
  with:</p>

<pre>

MENU Main
    File        submenu Main:File
    Edit        submenu Main:Edit
    Selection   submenu Main:Select
    Render      submenu Main:Render
    Compute     submenu Main:Compute
    GizMOE
        MENU GizMOE
            ...
        ENDMENU
    Window
        MENU Main:Window
            ...
        ENDMENU
    Help        submenu Help
ENDMENU

</pre>

<p>The last <i>menu-item</i> construct is used for command menu items that
  invoke SVL commands when selected. Each has the syntax <i>string</i> <b>{</b>
  <i>command</i> <b>}*</b>. The <i>string</i> is the text that will appear in
  the menu and each associated <i>command</i> can be:</p>

  <div class="indent">
    <dl>
      <dt><tt>active</tt> <i>expr</i></dt>
      <dd>Specifies the sensitivity of the menu item; <tt>active</tt> indicates
      that the menu item is to be sensitive if the subsequent expression
      evaluates to true. The <i>expr</i> is a boolean expression involving
      predefined <i>state tags</i> (see below). The <tt>&amp;&</tt> operator is
      used for logical conjunction, <tt>|</tt> operator is used for logical
      disjunction and the <tt>!</tt> operator for logical negation. The
      operator precedence from highest to lowest is <tt>! &amp; |</tt>;
      parentheses may be used to override the default precedence.</dd>

      <dt><tt>inactive</tt> <i>expr</i></dt>
      <dd>Similar to <tt>active</tt> except that the menu item is inactive, or
      grayed if the <i>expr</i> evaluates to false.</dd>

      <dt><tt>accel</tt> <i>accel-string</i></dt>
      <dd>Defines a keyboard accelerator for the menu item; accelerators have
      no effect in button bars or popup menus. The <i>accel-string</i> has the
      form <tt>Ctrl{+Alt|+Shift}+</tt><i>letter</i> (the <tt>+Alt</tt> and
      <tt>+Shift</tt> are optional, the <tt>Ctrl+</tt> is not).</dd>

      <dt><tt>bgcolor</tt> <i>color-string</i></dt>
      <dd>Sets the background color of the menu item to the color specified by
      <i>color-string</i>. The quoted <i>color-string</i> can be any one of the
      standard colors <tt>red</tt>, <tt>darkRed</tt>, <tt>green</tt>,
      <tt>darkGreen</tt>, <tt>blue</tt>, <tt>darkBlue,
      yellow</tt>, <tt>darkYellow</tt>, <tt>purple</tt>, <tt>darkPurple</tt>,
      <tt>orange</tt>, <tt>darkOrange</tt>, <tt>cyan,
      darkCyan</tt>, <tt>pink</tt>, <tt>darkPink</tt>, <tt>brown</tt>,
      <tt>darkBrown</tt>, <tt>white</tt>, <tt>gray</tt>, <tt>darkGray</tt> or
      <tt>black</tt>. Additionally, the <i>color-value</i> string can contain a
      hexadecimal number of the form <tt>0xRRGGBB</tt>, where RR is the red
      component, GG the green component and BB the blue component. For example,
      <tt>0x000000</tt> denotes black, <tt>0xff0000</tt> denotes red.</dd>

      <dt><tt>fgcolor</tt> <i>color-string</i></dt>
      <dd>Sets the text foreground color of the menu item to the color specified by
      <i>color-string</i>.</dd>

      <dt><tt>exec</tt> <i>svl-string</i> <b>{ <tt>&amp;</tt></b>
      <i>svl-string</i> <b>}*</b></dt>
      <dd>Specifies the SVL expression to execute when the menu item is
      selected. All strings separated by <b>&amp;</b> symbols are
      concatenated.</dd>

      <dt><tt>title</tt></dt>
      <dd>Displays the item <i>string</i> in boldface at the top of a popup
      menu.</dd>

      <dt><tt>replace_item_title</tt> <i>string</i></dt>
      <dd>Rename an existing menu item with the new name <i>string</i>.
        To be used in a <tt>MENU REPLACE_ITEM</tt> menu change definition.
        This combines <tt>MENU INSERT_AFTER</tt> and <tt>MENU DELETE</tt>.
      </dd>

      <dt><tt>help</tt> <i>string</i></dt>
      <dd>Add bubble help to menu item.</dd>


      <dt><tt>value</tt> <i>expr</i></dt>
      <dd>Displays the menu item as a checkbox which is on when the given
      <i>expr</i> evaluates to true.</dd>

      <dt><tt>radio value</tt> <i>expr</i></dt>
      <dd>Displays the menu item as a radio box which is on when the given
      <i>expr</i> evaluates to true.</dd>

      <dt><tt>columns</tt> <i>number</i></dt>
      <dd>Displays menu with specified number of columns.</dd>

    </dl>
  </div>

<p><br />For example, typical items in a File menu may specified with:</p>

<pre>

    MENU &quot;Main:File&quot;
        &quot;Save&quot;  exec 'Save[]'
                accel 'Ctrl+s'
                active data_modified &amp; atoms
        &quot;Close&quot; exec 'Close[]'
                active data
    ENDMENU

</pre>

<p>The predefined state tags in MOE are:</p>
  <table class="titlebar">
      <tr>
        <th>Tag</th>
        <th>Definition</th>
      </tr>
      <tr>
        <td><tt>data</tt></td>
        <td>There is molecular data (atoms, residues or chains)</td>
      </tr>
      <tr>
        <td><tt>data_modified</tt></td>
        <td>Molecular data is modified, but not saved</td>
      </tr>
      <tr>
        <td><tt>data_filename</tt></td>
        <td>A save filename exists</td>
      </tr>
      <tr>
        <td><tt>atoms</tt></td>
        <td>Atom objects exist</td>
      </tr>
      <tr>
        <td><tt>residues</tt></td>
        <td>Residue objects exist</td>
      </tr>
      <tr>
        <td><tt>chains</tt></td>
        <td>Chain objects exist</td>
      </tr>
      <tr>
        <td><tt>sel_atom</tt></td>
        <td>At least one atom is selected</td>
      </tr>
      <tr>
        <td><tt>sel_residue</tt></td>
        <td>At least one residue is selected</td>
      </tr>
      <tr>
        <td><tt>sel_chain</tt></td>
        <td>At least one chain is selected</td>
      </tr>
      <tr>
        <td><tt>sel_atom_1</tt></td>
        <td>Exactly one atom is selected</td>
      </tr>
      <tr>
        <td><tt>sel_atom_2</tt></td>
        <td>Exactly two atoms have been selected</td>
      </tr>
      <tr>
        <td><tt>sel_atom_3</tt></td>
        <td>Exactly three atoms have been selected</td>
      </tr>
      <tr>
        <td><tt>sel_residue_1</tt></td>
        <td>Exactly one residue is selected</td>
      </tr>
      <tr>
        <td><tt>sel_residue_2</tt></td>
        <td>Exactly two residues have been selected</td>
      </tr>
      <tr>
        <td><tt>sel_residue_3</tt></td>
        <td>Exactly three residues have been selected</td>
      </tr>
      <tr>
        <td><tt>mol_axes</tt></td>
        <td>Axes are displayed</td>
      </tr>
      <tr>
        <td><tt>mol_box</tt></td>
        <td>Periodic box is displayed</td>
      </tr>
      <tr>
        <td><tt>mol_constraints</tt></td>
        <td>Constraint meters are displayed</td>
      </tr>
      <tr>
        <td><tt>mol_meters</tt></td>
        <td>Meters are displayed</td>
      </tr>
      <tr>
        <td><tt>mol_hbonds</tt></td>
        <td>Hydrogen bonds are displayed</td>
      </tr>
      <tr>
        <td><tt>mol_any_stereo</tt></td>
        <td>Stereo mode is on</td>
      </tr>
      <tr>
        <td><tt>mol_antialias</tt></td>
        <td>Anti-aliasing is on</td>
      </tr>
      <tr>
        <td><tt>db_Fields</tt></td>
        <td>Database contains at least one field</td>
      </tr>
      <tr>
        <td><tt>db_entries</tt></td>
        <td>Database contains at least one entry</td>
      </tr>
      <tr>
        <td><tt>db_sel_Fields</tt></td>
        <td>Database has at least one field selected</td>
      </tr>
      <tr>
        <td><tt>db_sel_entries</tt></td>
        <td>Database has at least one entry selected</td>
      </tr>
      <tr>
        <td><tt>dbv_exists</tt></td>
        <td>A database viewer is up</td>
      </tr>
      <tr>
        <td><tt>dbv_read_only</tt></td>
        <td>Database viewer is read-only</td>
      </tr>
      <tr>
        <td><tt>dbv_mol_present</tt></td>
        <td>Database has a molecule data field</td>
      </tr>
      <tr>
        <td><tt>dbv_moe_present</tt></td>
        <td>Database has a moe data field</td>
      </tr>
      <tr>
        <td><tt>ted_exists</tt></td>
        <td>At least one SVL text editor is up</td>
      </tr>
      <tr>
        <td><tt>ted_highlight</tt></td>
        <td>Editor has highlighted text</td>
      </tr>
      <tr>
        <td><tt>ted_filename</tt></td>
        <td>Editor has a filename defined</td>
      </tr>
      <tr>
        <td><tt>ted_canundo</tt></td>
        <td>Editor can undo the command</td>
      </tr>
      <tr>
        <td><tt>ted_canredo</tt></td>
        <td>Editor can redo the command</td>
      </tr>
    </table>
<a id="ReadMenuFile"></a>
<hr noshade="noshade" />

<pre>
<span class="fcndef">ReadMenuFile</span> 'filename'
</pre>

<p><tt>ReadMenuFile</tt> reads a sequence of menu specifications from the
  given menu file and extends or replaces the existing MOE menus. The default
  MOE menus can be loaded by reading appropriate menu files in the
  <tt>$MOE/menu/</tt> directory. The default MOE menu files are
  <tt>$MOE/menu/moe-menus</tt> and <tt>$MOE/menu/menu-*</tt>.</p>


<pre>
<span class="fcndef">ReadMenuFile</span> "menu-string"
</pre>

<p><tt>ReadMenuFile</tt> uses the specified menu specification string
  and extends or replaces the existing MOE menus.</p>


<a id="EchoMenuCommands"></a>
<hr noshade="noshade" />
<pre>
new_value  = <span class="fcndef">EchoMenuCommands</span> old_value
curr_value = <span class="fcndef">EchoMenuCommands</span> []
</pre>

<p>By default, SVL commands issued from the CLI (Command Line Interface) text
  field(s) are echoed (printed) in the &quot;SVL Commands&quot; window, while
  SVL commands associated with menu items and invoked by menu events are not
  echoed. This behavior is controlled by a binary flag that can be examined
  and set by function <tt>EchoMenuCommands</tt>. If given a null argument, the
  function returns the current value of the flag. If given a numeric argument,
  the function sets the flag to that value and returns the previous value of
  the flag. A non-zero value of the flag indicates that (all) menu commands
  will be echoed in the &quot;SVL Commands&quot; window.</p>
  <!-- START MOE_FOOTER -->
  <div class="MOE_FOOTER">
    <img src="../../images/ccgicon.png" /> <a href="../../index.htm"></a>
    <a href="../../legal.htm"></a> &copy;<span class="versionyear"></span>
    <a href="http://www.chemcomp.com"></a>. All rights reserved.<br />
    <a href="mailto:info@chemcomp.com"></a>
  </div><!-- END MOE_FOOTER -->
</div>
</div>
</body>
</html>

