<!DOCTYPE html>
<html>

<!--
!!    MOE On-Line Manuals
!!    COPYRIGHT (C) CHEMICAL COMPUTING GROUP ULC.  ALL RIGHTS RESERVED.
!!-->
<head>
  <meta http-equiv="x-ua-compatible" content="IE=9" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <link rel="stylesheet" type="text/css" href="../../include/manstyle.css" />
  <link rel="icon" type="image/png" href="../../images/ccgicon.png" />
  <link rel="shortcut icon" type="image/png" href="../../images/ccgicon.png" />
  <meta name="keywords" content="keywords:" />
  <meta name="keywords" content="functions: db_Read" />
  <meta name="keywords" content="functions: db_ReadColumn" />
  <meta name="keywords" content="functions: db_ReadFields" />
  <title>MOE Database Functions: db_Read,...</title>
</head>
<body>
<div class="center-page">
  <!-- START MOE_HEADER -->
  <div class="MOE_HEADER">
    <a href="../../index.htm"><img src="../../images/ccglogo.png" /></a>
    <a href="../../index.htm"><div class="moeversion"></div></a>
    MOE Database Functions: db_Read,...
  </div>
<!-- END MOE_HEADER -->
<div class="content">

<h1>Syntax</h1>

<pre>
    entry_record = <a class="fcnlink" href=
"#db_Read">db_Read</a> [ mdb_key, entry_key ]

    value = <a class="fcnlink" href=
"#db_ReadColumn">db_ReadColumn</a> [ mdb_key, 'field_name' ]
    value = <a class="fcnlink" href=
"#db_ReadColumn">db_ReadColumn</a> [ 'mdb_name', 'field_name' ]

    values = <a class="fcnlink" href=
"#db_ReadFields">db_ReadFields</a> [ mdb_key, entry_key, field_tokens ]
    values = <a class="fcnlink" href=
"#db_ReadFields">db_ReadFields</a> [ 'filename', entry_key, field_tokens ]
</pre>

<a id="db_Read"></a>
<h1>Description</h1>

<pre>
entry_record = <span class="fcndef">db_Read</span> [ mdb_key, entry_key ]
</pre>

<p>Used for reading an entire entry, as specified by <tt>entry_key</tt> (a
  scalar), from the database identified by <tt>mdb_key</tt>.
  <tt>entry_record</tt> is a tagged vector in which every field value is tagged
  by its field name.</p>

<p>In the following example, the sample function accepts a database filename
  and a vector of integers specifying entry positions. The function prints the
  information for each of these entries. No error checking is done. If the
  values in <tt>n</tt> are out of range, an error will result.</p>

<pre>
    global function print_entries [filename, n]
        local mdb_key = db_Open [filename,'read'];
        local e = db_Entries mdb_key;
        print apt db_Read[ mdb_key, e[n] ];
        db_Close mdb_key;
    endfunction

        // at the command line:

    svl&gt; print_entries ['csfbrot.mdb', [1,2] ]
    [ [ mol:[ ['Small Molecule' ], [ &quot;A&quot;, 1 ], ... ], .... ],
    [ mol:[ ['Smaller Molecule' ], ... ], .... ] ]
</pre>
<a id="db_ReadColumn"></a>
<hr noshade="noshade" />

<pre>
value = <span class=
"fcndef">db_ReadColumn</span> [ mdb_key, 'field_name' ]
value = <span class=
"fcndef">db_ReadColumn</span> [ 'mdb_name', 'field_name' ]
</pre>

<p>Reads an entire field (column) of data from a database specified either by
  key (as returned by <tt>db_Open</tt>) or by filename.</p>

<p>The following will read all molecules from a database's molecule field
  named <tt>compound</tt> into a variable <tt>cpd</tt>.</p>

<pre>
    local cpd = db_ReadColumn [ mdb, 'compound' ];
</pre>
<a id="db_ReadFields"></a>
<hr noshade="noshade" />

<pre>
values = <span class=
"fcndef">db_ReadFields</span> [ mdb_key, entry_key, field_tokens ]
values = <span class=
"fcndef">db_ReadFields</span> [ 'filename', entry_key, field_tokens ]
</pre>

<p>Reads individual fields from an entry specified by <tt>entry_key</tt> in a
  database specified by either <tt>mdb_key</tt> or <tt>'filename'</tt>.
  The returned vector <tt>values</tt> contains the field value for each of the
  fields specified by field name in <tt>field_tokens</tt>.</p>

<p>In the following example, we read the values of two fields
  (<tt>'molecule'</tt> and <tt>'energy'</tt>) for the first
  entry of the database <tt>'my_database.mdb'</tt>. Data is placed into
  variables <tt>mol</tt> and <tt>energy</tt>.</p>

<pre>
    local function processFields []
        local mdb = db_Open ['my_database.mdb','read'];
        local entries = db_Entries mdb;    // get entry numbers

            // Get data from the first entry in database

        local [mol,energy] = db_ReadFields [
            mdb,
            first entries,                 // read from first entry only
            ['molecule','energy']
        ];
        db_Close mdb;

            // Do something with the field values

        ...

    endfunction
</pre>

<p>To read the field values from a subset of entries in the database, we call
  the function <tt>db_ReadFields</tt> using <tt>apt</tt>. The returned data is
  now two vectors, which are once again assigned to variables <tt>mol</tt> and
  <tt>energy</tt>.</p>

<pre>
    local function processFields []
        local mdb = db_Open ['my_database.mdb','read'];

            // Read from the first 10 entries in database

        local entries = keep [db_Entries mdb, 10];

        local [mol,energy] = tr apt db_ReadFields [
            mdb,                         // unit extends
            entries,                     // read from all entries
            [['molecule','energy']]      // unit extends
        ];
        db_Close mdb;

            // Do something with the field values

        ...

    endfunction
</pre>

<h1>See Also</h1>

<p><a href="introdb.htm">Database Functions</a><br /></p>

<p><a class="svl" href="mol.htm">mol_Create</a><br />
  <a class="svl" href="db_crfie.htm">db_Delete</a><br />
  <a class="svl" href="db_entry.htm">db_Entries</a><br />
  <a class="svl" href="db_ftype.htm">db_Fields</a><br />
  <a class="svl" href="db_crfie.htm">db_Write</a></p>
<!-- START MOE_FOOTER -->
  <div class="MOE_FOOTER">
    <img src="../../images/ccgicon.png" /> <a href="../../index.htm"></a>
    <a href="../../legal.htm"></a> &copy;<span class="versionyear"></span>
    <a href="http://www.chemcomp.com"></a>. All rights reserved.<br />
    <a href="mailto:info@chemcomp.com"></a>
  </div><!-- END MOE_FOOTER -->
</div>
</div>
</body>
</html>

