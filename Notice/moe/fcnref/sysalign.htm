<!DOCTYPE html>
<html>

<head>
  <meta http-equiv="x-ua-compatible" content="IE=9" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <link rel="stylesheet" type="text/css" href="../../include/manstyle.css" />
  <link rel="icon" type="image/png" href="../../images/ccgicon.png" />
  <link rel="shortcut icon" type="image/png" href="../../images/ccgicon.png" />
  <meta name="keywords" content="keywords:" />
  <meta name="keywords" content=
  "functions: AlignProfiles, AlignOpen, AlignSearch, AlignClose" />
  <title>Group-to-Group Alignment: AlignOpen ...</title>
</head>
<body>
<div class="center-page">
  <!-- START MOE_HEADER -->
  <div class="MOE_HEADER">
    <a href="../../index.htm"><img src="../../images/ccglogo.png" /></a>
    <a href="../../index.htm"><div class="moeversion"></div></a>
    Group-to-Group Alignment: AlignOpen ...
  </div>
<!-- END MOE_HEADER -->
<div class="content">

<h1>Syntax</h1>

<pre>
    [score, pos1, pos2] = <a class="fcnlink" href=
"#AlignProfiles">AlignProfiles</a> [
        profile1,
        profile2,
        gap_open1,
        gap_extend1,
        gap_open2,
        gap_extend2
        endgap_penalty_flag,
        alignment_constraints
    ];

    [key, score] = <a class="fcnlink" href="#AlignOpen">AlignOpen</a> [
        substitution_matrix,
        gapstart_penalty,
        group_indices,
        sequence_lengths,
        [sequences, positions, gap_penalties],
        alignment_constraints
    ];

    done = <a class="fcnlink" href="#AlignSearch">AlignSearch</a> key;

    [new_positions, score] = <a class="fcnlink" href=
"#AlignClose">AlignClose</a> key;
</pre>

<h1>Description</h1>

<p>These functions are used to calculate group-to-group multiple sequence
  alignments.</p>
<a id="AlignProfiles"></a>
<hr noshade="noshade" />

<pre>
   [score, pos1, pos2] = <span class="fcnlink">AlignProfiles</span> [
        profile1,
        profile2,
        gap_open1,
        gap_extend1,
        gap_open2,
        gap_extend2
        endgap_penalty_flag,
        alignment_constraints
    ];
</pre>

<p>Calculates the profile to profile alignment in linear space using
  quasi-natural gap costs and returns the alignment score and new alignment
  positions.</p>
  <dl>
    <dd></dd>
    <dt><tt>profile1, profile2</tt></dt>
    <dd>The score for matching position <i>i</i> and <i>j</i> equals the dot
    product of <tt>profile(i)</tt> and <tt>profile(j)</tt>.</dd>
    <dt><tt>gap_open1, gap_open2, gap_extend1, gap_extend2</tt></dt>
    <dd>The penalties for opening a gap between position <i>i</i> and <i>j</i>
    is equal to mean of gap_open1[[i+1,i+2]] and gap_open2[[j+1,j+2]]. The
    first and last elements of the gap_open and gap_extend vectors are used to
    calculate gaps at the beginning or end of the profiles.</dd>
    <dt><tt>endgap_penalty_flag</tt></dt>
    <dd>If on, endgaps are penalized.</dd>
    <dt><tt>alignment_constraints</tt></dt>
    <dd>Alignment constraints are submitted in the form of a set of integer
    pairs, one per alignment constraint. Each constraint constrains a position
    in profile1 to align to a position in profile2.</dd>
  </dl>
<a id="AlignOpen"></a>
<hr noshade="noshade" />

<pre>
[key, score] = <span class="fcndef">AlignOpen</span> [
    substitution_matrix,
    gapstart_penalty,
    group_indices,
    sequence_lengths,
    [sequences, positions, gap_penalties],
    alignment_constraints
];
</pre>

<p>Allocates memory and sets up a system to perform an alignment. Returns the
  key to be used in subsequent calls to <tt>AlignSearch</tt>.</p>
  <dl>
    <dt><tt>substitution_matrix</tt></dt>
    <dd>Rectangular matrix of non-negative real numbers.</dd>
    <dt><tt>gapstart_penalty</tt></dt>
    <dd>Non-negative real number.</dd>
    <dt><tt>grouping_indices</tt></dt>
    <dd>Flat integer vector that specifies which of the submitted sequences
    will be aligned. 1 indicates the corresponding sequence is a member of
    group number one; 2 indicates that it is part of group number two. Zeros
    indicate that this sequence will be ignored.</dd>
    <dt><tt>sequence_lengths</tt></dt>
    <dd>Split vector, specifying the length of each of the submitted
    sequences.</dd>
    <dt><tt>sequences</tt></dt>
    <dd>Sequences are submitted in a flat vector. Each element will be taken as
    either a column (if the sequence is in group one) or a row (if the sequence
    is in group two) when looking up scores in the substitution matrix.</dd>
    <dt><tt>positions</tt></dt>
    <dd>Alignment positions are submitted as a flat vector of strictly positive
    integers.</dd>
    <dt><tt>gap_penalties</tt></dt>
    <dd>Flat vector of real numbers, specifying the position-dependent gap
    penalties.</dd>
    <dt><tt>alignment_constraints</tt></dt>
    <dd>Alignment constraints are submitted in the form of a set of flat
    vectors, one per alignment constraint. Each constraint is a vector of
    indices into the flat sequence data.</dd>
  </dl>
<a id="AlignSearch"></a>
<hr noshade="noshade" />

<pre>
done = <span class="fcndef">AlignSearch</span> key;
</pre>

<p>Performs the search on the given system. Returns a done flag indicating
  whether or not the search is completed. 0 indicates not done while a value of
  1 indicates done.</p>
<a id="AlignClose"></a>
<hr noshade="noshade" />

<pre>
[new_positions, score] = <span class="fcndef">AlignClose</span> key;
</pre>

<p>Frees the memory associated with the alignment system and returns the
  final positions and score.</p>

<h1>See Also</h1>

<p><a class="svl" href="caligpos.htm">cAlignmentPositions</a><br />
  <a class="svl" href="../../proteins/fcnref/pro_alig.htm">pro_Align</a>
  </p>
<!-- START MOE_FOOTER -->
  <div class="MOE_FOOTER">
    <img src="../../images/ccgicon.png" /> <a href="../../index.htm"></a>
    <a href="../../legal.htm"></a> &copy;<span class="versionyear"></span>
    <a href="http://www.chemcomp.com"></a>. All rights reserved.<br />
    <a href="mailto:info@chemcomp.com"></a>
  </div><!-- END MOE_FOOTER -->
</div>
</div>
</body>
</html>

